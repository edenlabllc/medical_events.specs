FORMAT: 1A
HOST: http://ehealth.edenlabllc.com/

# eHealth Medical Events API

All the medical data stored in eHealth belongs to the patient and must be properly protected. eHealth provides several mechanisms to secure patient's data and limitate access.

1. Only authenticated user with appropriate scope can access medical data
List of scopes available for the specific user role can be recieved using [/roles endpoint](https://ehealthmisapi1.docs.apiary.io/#reference/public.-medical-service-provider-integration-layer/roles/list-roles)

[wiki: Scopes data model](https://edenlab.atlassian.net/wiki/spaces/EH/pages/2004415/Scopes+model)

2. Only user who has active declaration with patient is "authorized" to manage all patient's data (view history, add new medical events)
3. Patient is able to grant access to specific episode(s) for specific users. User with this approval can view episode details and its nested entities

![Access policy](https://image.ibb.co/fOPoTV/Referrals-Medical-events-usage.png)

# Group Medical Events
Medical events API is a set of web services designed to provide methods of communication between eHealth Medical Data Storage and medical information systems (MIS).
Medical events API is based on the international framework for exchanging digital health records - FHIR( Release 3 (STU)). Most of  major resources, data types, data structures and their way of interpretation are inherited from FHIR. However, there are minor сhanges described in Apiary.
To find out more about business logic behind the API read [this](https://edenlab.atlassian.net/wiki/spaces/EH/pages/604241979/Medical+Events+API).
###Sequence diagram
In order to provide a consistency of submitted data the established flow should be followed:
![Contract request flow](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgU3VibWl0dGluZyBtZWRpY2FsIGRhdGEgcGFja2FnZQoKcGFydGljaXBhbnQgTUlTIGFzIG1zcAAKDWVIZWFsdGggYXMgZWgABgUAKQ1Eb2N1bWVudCBzdG9yYWdlIGFzAAMICgoKbXNwLT4AMAc6IDw8U2VhcmNoIGZvciBhIHBlcnNvbj4-CgBRBy0-bXNwOiA8PFJlc3BvbnNlIHdpdGgAIAdzIGlkcz4-Cm9wdABIDjw8Q3JlYXRlIGVwaXNvZGUARAwAgSoHIDoAHAdhc3luYyBqb2IAZQ4AaghkAGsGam9iIGlkADUTOiAAXQ4AgU4RR2V0ADkFYnkAMg8AgUwNAFwLZGV0YWlscz4-CmVuZACBSBRVcGQAdGgAXQ4AgQxQAIQFBgCDXAUAgygIbmNvdW50ZXIAhQYJABkKU2lnbgAJGACEQwwAhVsFADgSAIMwVACFWQc6IFNhdmUgc2lnbmVkIGNvbnRlbnQgdG8AhWwJAIQjElByb2Nlc3MAgS0ZAIN7OwCFehRsb3MAhSZnAF4MAIVATAoKCgoKCgoK&s=modern-blue)

## Encounter Data Package [/api/patients/{id}/encounter_package]

### Submit Encounter Package [POST]

Using this web service you can submit:

Object| Required| Part of Signed content
-------|---------|------
Visit| 0-1 | false
Encounter| 1-1 |true
Condition| 0-* |true
Observation| 0-* |true
Allergy intolerance| 0-* |true
Immunization| 0-* |true

To find out more about the process of encounter package creation read [Confluence Submit Encounter Data Package ](https://edenlab.atlassian.net/wiki/spaces/EH/pages/608272488/Submit+Encounter+Data+Package).



+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Submit_Encounter_Package`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)



### Get async Job processing details [GET /api/jobs/{id}]
This resource should be used to get the processing status of the async job

+ Parameters
    + id: `NBXk9EyErUZv1RhXgyvgg` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer 342432fdsfdsgfdt24535422fgds

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Job`)

+ Response 303 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 303 (number)
        + data (`Job`)
            + status: `processed`
            + status_code: `200`
            + links (array, required, fixed-type)
                + (object)
                    + entity: `encounter` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/encounters/90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
                + (object)
                    + entity: `condition` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/conditions/df112200-64da-451b-bf77-8e7655bbd48f` (string, required)
                + (object)
                    + entity: `observation` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/observations/d118cc02-3b9b-4d1a-b728-eda4e3d58f25` (string, required)
                + (object)
                    + entity: `allergy_intolerance` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/allergy_intolerances/5f41c64a-6742-4d6d-9f3b-c6742b2ee0a1` (string, required)
                + (object)
                    + entity: `immunization` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/immunizations/c2e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Job_Error`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Object not found` (string)

### Dummy Encounter [POST]
This chapter describes different examples of Encounters that could be submitted as a signed content in Submit Visit web service.

+ Request Encounter with new Condition (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (Encounter_Request)
        
    
#### Dummy Condition [POST]
Here you can find additional examples of Conditions that could be submitted as a part of signed content.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Condition_Request`)
    
    
#### Dummy Observation [POST]
Here you can find additional examples of Observations that could be submitted as a part of signed content.

+ Request 1 (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Observation_Request_1`)
    
    
+ Request 2 (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Observation_Request_2`)

        
        
    
#### Dummy Immunization [POST]
Here you can find additional examples of Immunizations that could be submitted as a part of signed content.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Immunization_Request`) 
    
#### Dummy Allergy_Intolerance [POST]
Here you can find additional examples of Allergy_Intolerances that could be submitted as a part of signed content.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Allergy_Intolerance_Request`)


#### Examples

Example #1:
Patient's reasons to come to the doctor: obtain heart observation (ICPC2 code K31)
Asserted diagnosis: ICPC2 code K87
Observations performed: weight 82 kg, heigh 170 cm, BMI 28,4 kg/m^2, BP 150/95, EKG, urine analysis (Action ICPC2 code K31)
Prescriptions made: Спіронолактон 50, Еналаприл 10, Бісопролол 10 (Action ICPC2 code K50)

In order to register this event in eHealth, next  objects should be created:

```
//Епізод №1 - Гіпертонія з ускладненням 
{
  "id": "90a9e15b-b71b-4caf-8f2e-ff247e8a5600",
  "type": "Первинна допомога",
  "status": "active",
  "name": "Гіпертонія з ускладненням",
  "managing_organization": {
    "identifier": {
      "type": {
        "coding": [
          {
            "system": "eHealth/resources",
            "code": "legal_entity"
          }
        ]
      },
      "value": "c88a4c57-5e65-47f7-bb16-c86a554a0984 "
    }
  },
  "period": {
    "start": "2018-11-02T10:45:16.000Z"
  },
  "care_manager": {
    "identifier": {
      "type": {
        "coding": [
          {
            "system": "eHealth/resources",
            "code": "employee"
          }
        ]
      },
      "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396 "
    }
  }
}
```

```
//Пакет даних, зібраних у рамках звернення по епізоду "Гіпертонія з ускладненням "
{
  "visit": {
    "id": "d8c8a938-27bf-4ffb-aeda-1d2f9754cb25",
    "period": {
      "start": "2018-11-02T10:45:16.000Z",
      "end": "2018-11-02T11:25:16.000Z"
    }
  },
  "signed_data": "'ew0KICAicGVyaW9kIjogew0KIC...'"
}
```
```
//Розшифровка підписаного контенту
{
  "encounter": {
    "id": "0545e134-58ce-4195-99a5-0a98dca9aff7",
    "status": "finised",
    "date": "2018-11-02",
    "visit": {
      "identifier": {
        "type": {
          "coding": [
            {
              "system": "eHealth/resources",
              "code": "visit"
            }
          ]
        },
        "value": "d8c8a938-27bf-4ffb-aeda-1d2f9754cb25"
      }
    },
    "episode": {
      "identifier": {
        "type": {
          "coding": [
            {
              "system": "eHealth/resources",
              "code": "episode"
            }
          ]
        },
        "value": "90a9e15b-b71b-4caf-8f2e-ff247e8a5600"
      }
    },
    "class": {
      "system": "eHealth/encounter_classes",
      "code": "AMB"
    },
    "type": {
      "coding": [
        {
          "system": "eHealth/encounter_types",
          "code": "270427003"
        }
      ]
    },
    "performer": {
      "identifier": {
        "type": {
          "coding": [
            {
              "system": "eHealth/resources",
              "code": "employee"
            }
          ]
        },
        "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396 "
      }
    },
    "reasons": [
      {
        "coding": [
          {
            "system": "eHealth/ICPC2/reasons",
            "code": "K31"
          }
        ]
      }
    ],
    "diagnoses": [
      {
        "condition": {
          "identifier": {
            "type": {
              "coding": [
                {
                  "system": "eHealth/resources",
                  "code": "condition"
                }
              ]
            },
            "value": "d66623f7-f2d9-4889-8567-4107309eac80"
          }
        },
        "code": {
          "coding": [
            {
              "system": "eHealth/ICPC2/conditions",
              "code": "K87"
            }
          ]
        },
        "role": {
          "coding": [
            {
              "system": "eHealth/diagnoses_roles",
              "code": "cheif_complaint"
            }
          ]
        },
        "rank": 1
      }
    ],
    "actions": [
      {
        "coding": [
          {
            "system": "eHealth/ICPC2/actions",
            "code": "K31"
          }
        ]
      },
      {
        "coding": [
          {
            "system": "eHealth/ICPC2/actions",
            "code": "K50"
          }
        ]
      },
      {
        "coding": [
          {
            "system": "eHealth/ICPC2/actions",
            "code": "K35"
          }
        ]
      },
      {
        "coding": [
          {
            "system": "eHealth/ICPC2/actions",
            "code": "K42"
          }
        ]
      }
    ],
    "division": {
      "identifier": {
        "type": {
          "coding": [
            {
              "system": "eHealth/resources",
              "code": "division"
            }
          ]
        },
        "value": "9183a36b-4d45-4244-9339-63d81cd08d9c"
      }
    },
    "prescriptions": "Спіронолактон 50 по 2 таблетки на день напротязі 10-ти днів після їжі, Еналаприл 10 по 1-й таб. в день напротязі 5-ти днів до їжі, Бісопролол 10 по 0,5 таблетки в день напротязі 5 днів підчас їжі. Дієта№1. Знизити фізичні навантаження."
  },
  "conditions": [
    {
      "id": "d66623f7-f2d9-4889-8567-4107309eac80",
      "primary_source": true,
      "asserter": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "code": {
        "coding": [
          {
            "system": "eHealth/ICPC2/conditions",
            "code": "K87"
          }
        ]
      },
      "clinical_status": "active",
      "verification_status": "provisional",
      "severity": {
        "coding": [
          {
            "system": "eHealth/severities_codes",
            "code": "55604002"
          }
        ]
      },
      "body_sites": [
        {
          "coding": [
            {
              "system": "eHealth/body_sites",
              "code": "181414000"
            }
          ]
        }
      ],
      "onset_date": "2018-01-01T00:00:00.000Z",
      "asserted_date": "2018-11-02T10:46:37.694Z",
      "stage": {
        "summary": {
          "coding": [
            {
              "system": "eHealth/condition_stages",
              "code": "14803004"
            }
          ]
        }
      },
      "evidences": [
        {
          "code": [
            {
              "coding": [
                {
                  "system": "eHealth/ICPC2/reasons",
                  "code": "K85"
                }
              ]
            }
          ],
          "detail": [
            {
              "identifier": {
                "type": {
                  "coding": [
                    {
                      "system": "eHealth/resources",
                      "code": "observation"
                    }
                  ]
                },
                "value": "98cb9ee3-9b39-46bc-90aa-491940287edc"
              }
            },
            {
              "identifier": {
                "type": {
                  "coding": [
                    {
                      "system": "eHealth/resources",
                      "code": "observation"
                    }
                  ]
                },
                "value": "538c7509-2ad0-4fb1-8eab-2718ed5e6874 "
              }
            }
          ]
        }
      ]
    }
  ],
  "observations": [
    {
      "id": "98cb9ee3-9b39-46bc-90aa-491940287edc",
      "status": "final",
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "0545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "categories": [
        {
          "coding": [
            {
              "system": "eHealth/observation_categories",
              "code": "laboratory"
            }
          ]
        }
      ],
      "code": {
        "coding": [
          {
            "system": "eHealth/LOINC/observation_codes",
            "code": "5778-6"
          }
        ]
      },
      "effective_date_time": "2018-11-02T10:55:16.000Z",
      "issued": "2018-11-02T10:55:16.000Z",
      "primary_source": true,
      "performer": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "value_codeable_concept": {
        "coding": [
          {
            "system": "eHealth/LOINC",
            "code": "371244009"
          }
        ],
        "text": "Yellow"
      },
      "reference_ranges": [
        {
          "text": "Yellow"
        }
      ]
    },
    {
      "id": "f57dc3f4-add2-488a-9da2-86d615c731c7",
      "status": "final",
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "0545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "categories": [
        {
          "coding": [
            {
              "system": "eHealth/observation_categories",
              "code": "laboratory"
            }
          ]
        }
      ],
      "code": {
        "coding": [
          {
            "system": "eHealth/LOINC/observation_codes",
            "code": "32167-9"
          }
        ]
      },
      "effective_date_time": "2018-11-02T10:55:16.000Z",
      "issued": "2018-11-02T10:55:16.000Z",
      "primary_source": true,
      "performer": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "value_codeable_concept": {
        "coding": [
          {
            "system": "eHealth/LOINC",
            "code": "371244009"
          }
        ],
        "text": "Cloudy"
      },
      "reference_ranges": [
        {
          "text": "Pure"
        }
      ]
    },
    {
      "id": "50f5ecd3-11ce-45de-ac54-b63a26e03efd",
      "status": "final",
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "0545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "categories": [
        {
          "coding": [
            {
              "system": "eHealth/observation_categories",
              "code": "vital-signs"
            }
          ]
        }
      ],
      "code": {
        "coding": [
          {
            "system": "eHealth/LOINC/observation_codes",
            "code": "29463-7"
          }
        ]
      },
      "effective_date_time": "2018-11-02T10:55:16.000Z",
      "issued": "2018-11-02T10:55:16.000Z",
      "primary_source": true,
      "performer": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "value_quantity": {
        "value": 90,
        "unit": "kg",
        "system": "eHealth/units",
        "code": "kg"
      }
    },
    {
      "id": "f579c430-3938-496d-8d30-859e5e1bed31",
      "status": "final",
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "0545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "categories": [
        {
          "coding": [
            {
              "system": "eHealth/observation_categories",
              "code": "vital-signs"
            }
          ]
        }
      ],
      "code": {
        "coding": [
          {
            "system": "eHealth/LOINC/observation_codes",
            "code": "8302-2"
          }
        ]
      },
      "effective_date_time": "2018-11-02T10:55:16.000Z",
      "issued": "2018-11-02T10:55:16.000Z",
      "primary_source": true,
      "performer": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "value_quantity": {
        "value": 190,
        "unit": "cm",
        "system": "eHealth/units",
        "code": "cm"
      }
    },
      {
      "id": "ed275f26-702a-4a2f-aad8-14b1f883e683",
      "status": "final",
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "0545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "categories": [
        {
          "coding": [
            {
              "system": "eHealth/observation_categories",
              "code": "vital-signs"
            }
          ]
        }
      ],
      "code": {
        "coding": [
          {
            "system": "eHealth/LOINC/observation_codes",
            "code": "39156-5"
          }
        ]
      },
      "effective_date_time": "2018-11-02T10:55:16.000Z",
      "issued": "2018-11-02T10:55:16.000Z",
      "primary_source": true,
      "performer": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "value_quantity": {
        "value": 16.2,
        "unit": "kg/m2",
        "system": "eHealth/units",
        "code": "kg/m2"
      }
    },
     {
      "id": "ada6d5cd-f14b-45f5-a427-3fa9d5a7bf1e",
      "status": "final",
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "0545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "categories": [
        {
          "coding": [
            {
              "system": "eHealth/observation_categories",
              "code": "vital-signs"
            }
          ]
        }
      ],
      "code": {
        "coding": [
          {
            "system": "eHealth/LOINC/observation_codes",
            "code": "8480-6"
          }
        ]
      },
      "effective_date_time": "2018-11-02T10:55:16.000Z",
      "issued": "2018-11-02T10:55:16.000Z",
      "primary_source": true,
      "performer": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "value_quantity": {
        "value": 150,
        "unit": "mm[Hg]",
        "system": "eHealth/units",
        "code": "mm[Hg]"
      }
    },
         {
      "id": "ada6d5cd-f14b-45f5-a427-3fa9d5a7bf1e",
      "status": "final",
      "context": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "encounter"
              }
            ]
          },
          "value": "0545e134-58ce-4195-99a5-0a98dca9aff7"
        }
      },
      "categories": [
        {
          "coding": [
            {
              "system": "eHealth/observation_categories",
              "code": "vital-signs"
            }
          ]
        }
      ],
      "code": {
        "coding": [
          {
            "system": "eHealth/LOINC/observation_codes",
            "code": "8462-4"
          }
        ]
      },
      "effective_date_time": "2018-11-02T10:55:16.000Z",
      "issued": "2018-11-02T10:55:16.000Z",
      "primary_source": true,
      "performer": {
        "identifier": {
          "type": {
            "coding": [
              {
                "system": "eHealth/resources",
                "code": "employee"
              }
            ]
          },
          "value": "9a06bf93-7baa-4e9c-a063-0edd3b796396"
        }
      },
      "value_quantity": {
        "value": 95,
        "unit": "mm[Hg]",
        "system": "eHealth/units",
        "code": "mm[Hg]"
      }
    }
  ]
}
```


### Cancel Encounter Package [PATCH]
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
          + signed_data: `ew0KICAicGVyaW9kIjogew0KIC...` (string, required)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)


### Cancel Encounter Package Dummy[PATCH]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Cancel_Encounter`) 

+ Response 200 (application/json)
   

## Episode of Care [/api/patients/{id}/episodes]

### Create Episode  [POST]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Episode_Of_Care_Request`

+ Response 200 (application/json)
    

### Get Episode by id[GET /api/patients/{patient_id}/episodes/{episode_id}]
Use period_from period_to to find episodes that were active in a certain period of time

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Episode identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data(`Episode_Of_Care_Response`)
    

### Get Episodes by search params [GET /api/patients/{patient_id}/episodes{?period_from,period_to,page,page_size}]

This web service returns brief information in order not to disclose confidential and sensitive data. Access to full episode data is restricted by patient's approval.
If you have an approval - you can obtain episode details and nested entities through `/episode/:id/*` web services

**Scopes required:** `TBD`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `period_from`: `2017-01-01` (string, optional)
    + `period_to`: `2018-01-01` (string, optional)

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Short`])

### Update Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request Package (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + include `Update_Episode`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Close Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/close]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request  (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Close_Episode`


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Cancel Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/cancel]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request  (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + include `Cancel_Episode`


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get encounters in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/encounters{?date_from,date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `date_from`:`1990-01-01`(string, optional)
    + `date_to`: `2000-01-01`(string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Encounter_Response`], fixed-type)

### Get encounter details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/encounters/{encounter_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Encounter identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Encounter_Response`)

### Get conditions in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/conditions{?code,onset_date_from,onset_date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `A20` (string, optional)
    + `onset_date_from`:`1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`], fixed-type)

### Get conditions details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/conditions/{condition_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `condition_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Condition identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`)

### Get observations in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/observations{?code,issued_from,issued_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `10569-2` (string, optional)
    + `issued_from`:`1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`], fixed-type)

### Get observation details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/observations/{observation_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `observation_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Observation identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`)

### Get allergy intolerances in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/allergy_intolerances{?code,onset_date_time_from,onset_date_time_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `227493005` (string, optional)
    + `onset_date_time_from`:`1990-01-01` (string, optional) 
    + `onset_date_time_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`], fixed-type)

### Get allergy intolerance details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/allergy_intolerances/{allergy_intolerance_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `allergy_intolerance_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Allergy intolerance identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`)

### Get immunizations in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/immunizations{?code,date_from,date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `vaccine_code`: `wex-10` (string, optional)
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

### Get immunization details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/immunizations/{immunization_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `immunization_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Immunization identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`)

## Encounter [/api/patient/{id}/encounters]

### Get Encounter by  id[GET /api/patient/{patient_id}/encounters/{encounter_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `encounter_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Encounter identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Encounter_Response`)
    

### Get Encounters by search params[GET /api/patient/{patient_id}/encounters{?date_from,date_to,episode_id,page,page_size}]
+ Parameters
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `date_from`:`1990-01-01`(string, optional)
    + `date_to`: `2000-01-01`(string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Encounter_Response`])

## Conditions [/api/patients/{patient_id}/conditions]

### Get Condition by id [GET /api/patients/{patient_id}/conditions/{condition_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `condition_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Condition identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`)
    

### Get Conditions by search params [GET /api/patients/{patient_id}/conditions{?encounter_id,episode_id,onset_date_from,onset_date_to,code,page,page_size}]
+ Parameters
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `onset_date_from`:`1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`])
    

## Observation [/api/patients/{patient_id}/observation/{id}]

### Get Observation by id[GET /api/patients/{patient_id}/observations/{observation_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `observation_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Observation identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`)
    

### Get Observations by searh params[GET /api/patients/{patient_id}/observations{?encounter_id,episode_id,code,issued_from,issued_to,page,page_size}]
+ Parameters
    + `page`: `1` (number, optional) - Page number    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `10569-2` (string, optional)
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `issued_from`:`1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`])



## Allergy Intolerance [/api/patients/{patient_id}/allergy_intolerances/{id}]

### Get Allergy Intolerance by id[GET /api/patients/{patient_id}/allergy_intolerances/{allergy_intolerance_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `allergy_intolerance_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Allergy intolerance identifier
 
+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`)

### Get Allergy Intolerances by search params[GET /api/patients/{patient_id}/allergy_intolerances{?encounter_id,episode_id,code,onset_date_time_from,onset_date_time_to,page,page_size}]

+ Parameters
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `227493005` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `onset_date_time_from`:`1990-01-01` (string, optional)
    + `onset_date_time_to`: `2000-01-01` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`])



## Immunization [/api/patients/{patient_id}/immunizations]

### Get Immunization by id [GET /api/patients/{patient_id}/immunizations/{immunization_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + immunization_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`)

### Get Immunizations by search params [GET /api/patients/{patient_id}/immunizations{?vaccine_code,date_from,date_to,page,page_size,code,encounter_id,episode_id}]

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `vaccine_code`: `wex-10` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

## Patient Summary [/api/patients/{patient_id}/summary]

----
**Patient Summary** - is a set of services that provide access to the patient's basic Medical Data

Basic Medical Data includes the following entities:

Entity              | Access level 
--------------------|-------------
Allergy Intolerance | All *Allergy Intolerances* are available for Patient Summary
Immunizations       | All *Immunizations* are available for Patient Summary
Conditions          | Only specific *Conditions* are available for Patient Summary. Restrictions is based on *condition.code*
Observations        | Only specific *Observations* are available for Patient Summary. Restrictions is based on *observation.code*
Diagnoses           | Only current diagnoses related to active *Episodes* that refer to specific *Conditions* are available for Patient Summary. Restrictions is based on *condition.code*

### Get Immunizations [GET /api/patients/{patient_id}/summary/immunizations{?page,page_size,code,date_from,date_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `vaccine_code`: `wex-10` (string, optional)
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

### Get Immunization by id [GET /api/patients/{patient_id}/summary/immunizations/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`, fixed-type)

### Get Allergy Intolerances [GET /api/patients/{patient_id}/summary/allergy_intolerances{?page,page_size,code,onset_date_time_from,onset_date_time_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `227493005` (string, optional) 
    + `onset_date_time_from`: `1990-01-01` (string, optional) 
    + `onset_date_time_to`: `2000-01-01` (string, optional) 

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`], fixed-type)

### Get Allergy Intolerance by id [GET /api/patients/{patient_id}/summary/allergy_intolerances/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique allergy intolerance identifier
 
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`, fixed-type)

### Get Observations [GET /api/patients/{patient_id}/summary/observations{?page,page_size,code,issued_from,issued_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `10569-2` (string, optional)
    + `issued_from`: `1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`], fixed-type)

### Get Observation by id [GET /api/patients/{patient_id}/summary/observations/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique observation identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`, fixed-type)

### Get Conditions [GET /api/patients/{patient_id}/summary/conditions{?page,page_size,code,onset_date_from,onset_date_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)
    + `onset_date_from`: `1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`], fixed-type)

### Get Condition by id [GET /api/patients/{patient_id}/summary/conditions/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique condition identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`, fixed-type)

### Get active Diagnoses [GET /api/patients/{patient_id}/summary/diagnoses]

This endpoint returns current diagnoses related only to active episodes. In order to get specific condition details, use [Get Condition by ID](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/patient-summary/get-condition-by-id)

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)

# Data Structures

## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)
    + affordances (array[Affordance], required) - List of available affordances and their URLs

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: http://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `req-adasdoijasdojsda` (string) - [Request ID](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: type_atom (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array)
    + `entry_type`: `json_data_proprty` (string) - Type of error.
    + entry: $.cvv (string) - JSON Path to an invalid property.
    + rules (array)
        + rule: required (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
        + params (array) - Validation Parameters.

### `Response__Pagination`
+ page: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 20 (number) - Total number of pages.

### `Affordance`
+ action (string, required) - Affordance action.
+ url (string, required)

### `Reference`
+ identifier (Identifier)


### `Identifier`
+ `type`(Codeable_Concept, required) - Description of identifier
+ `value` : `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required)- The value that is unique

### `Codeable_Concept`
+ `coding` (array, required, fixed-type)
    + (object)
        + include `Coding`
+ text (string, optional)

### `Coding`
+ system : `eHealth/resources` (string, optional)
+ code : `patient` (string, required) - Symbol in syntax defined by the system


### `Period`
+ start : `2018-08-02T10:45:16.000Z`(string, required) - C? Starting time with inclusive boundary
+ end : `2018-08-02T11:00:00.000Z`(string, optional) - C? End time with inclusive boundary, if not ongoing

### `Quantity`
+ value : `13,5` (number, required)
+ comparator : `>` (string, optional)
+ unit : `mg` (string, required)
+ system : `eHealth/units` (string, optional)
+ code: `mg` (string, optional)
        

### `Range`
+ low (Quantity, required)
+ high (Quantity, required)

## Episode Of Care

### `Episode_Of_Care_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `type`: `primary_care` (string, required)
+ `status`: `active`
+ name: `Діабет 2018` (string, required)
                    
+ `patient` (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    
+ diagnoses_hstr (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
                            
            
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ managing_organization (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
            
+ period (Period, required)
    - end (string, optional)
+ care_manager (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)


### `Episode_Of_Care_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `type`: `Первинна допомога` (string, required)
+ `status`: `active`
+ name: `Діабет 2018` (string, required)
+ number: `XXAB-4567CH` (string, required) - Unique human readable episode of care number. Must be generated by the client before sending request
            
+ managing_organization (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
            
+ period (Period, required)
    - end (string, optional)
+ care_manager (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)

### `Episode_Of_Care_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ `type`: `primary_care` (string, required)
+ `status`: `active` (string, required)
+ name: `Діабет 2018` (string, required)
+ number: `XXAB-4567CH` (string, required) - Unique human readable episode of care number. Must be generated by the client before sending request
+  `status_history`  (array, optional, fixed-type)
    +(object)
        + status: `closed` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `current_diagnoses` (array, optional, fixed-type)
    + (Diagnosis)
+ `diagnoses_history` (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
                            
            
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ `status_history` (array, required, fixed_type)
    + (object)
        + status: `active` (string, required)
        + status reason (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string) \\ wrong_patient, misspelling
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)            
+ managing_organization (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
    + display: Лимич Медікал (string, required) 
            
+ period (Period, required)
    - end (string, optional)
+ care_manager (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
                    
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
            
+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    


### `Update_Episode`
+ name: `Інсулінонезалежний діабет` (string, optional)

+ care_manager (Reference, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
                    

### `Cancel_Episode`

+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `cancellation_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    - text (string)

### `Close_Episode`
+ `period` (object, required)
    + `end`: `2018-09-10` (string, required)
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `closing_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
    - text (string)

### `Episode_Of_Care_Short`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ name: `Діабет 2018` (string, required)
+ `status`: `active` (string, required)
+ period (Period, required)
    - end (string, optional)

##Visit

### `Visit_Body`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ period (Period, required)
    + end  : `2018-08-02T10:45:16.000Z` (string, required)

### `Submit_Encounter_Package`

+ `visit` (object, optional, fixed-type)
    + include `Visit_Body`
+ `signed_data` : 'ew0KICAicGVyaW9kIjogew0KIC...' (string, required, fixed-type)




## Diagnosis

### `Diagnosis_New_Condition`
+ condition (Condition_Request, required)
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `http://hl7.org/fhir/diagnosis-role`,
            + `code`: `CC`,
            
    
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

### `Diagnosis_Referrence_Condition_2`

+ `condition` (Reference, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
                    
+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `ICPC2`,
            + `code`: `D30`,
            
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `??`,
            + `code`: `основний`,
           
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

### `Diagnosis_Referrence_Condition`

+ `condition` (Reference, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
                    
+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/ICPC2/conditions`,
            + `code`: `A20`,
            
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnoses_roles`,
            + `code`: `cheif_complaint`,
            
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

### `Diagnosis_Response`




## Encouner
### `Encounter_Base` (object)
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `status`: `finised`  (string, required)                 
+ `date`: `2018-08-02` (string, required)              
+ `visit` (Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `http://hl7.org/fhir/v3/ActCode` (string)
    + code: `AMB` (string)
    
    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `http://snomed.info/sct` (string)
            + code: `11429006` (string)
            
+ incoming_referrals(array, optional)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: referral (string)
                    
+ performer (Reference, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
                    
+ reasons (array,required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `??/ICPC2 (string)
             + code: `A02` (string)
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `??/ICPC2 (string)
                + code: `D09` (string)
                
        
+ diagnoses (array, required, fixed-type)
    + (`Diagnosis_Referrence_Condition`)
        
        
+ actions (array, required, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `??/ICPC2 (string)
             + code: `T47` (string)
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `??/ICPC2 (string)
             + code: `T50` (string)
             
+ division (Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)

### `Encounter_Request` 
+ encounter (`Encounter_Base`, required, fixed-type)
+ conditions (array, optional, fixed-type)
    + (`Condition_Request`)
    + (`Condition_Request_2`)
+ observations (array, optional, fixed-type)
    + (`Observation_Request_1`)    
+ `allergy_intolerances` (array[`Allergy_Intolerance_Request`], optional, fixed-type)
+ immunizations (array[`Immunization_Request`], optional, fixed-type)

### `Encounter_Response`
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `status`: `finised`  (string, required)                 
+ `date`: `2018-08-02` (string, required)              
+ `visit` (Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `http://hl7.org/fhir/v3/ActCode` (string)
    + code: `AMB` (string)

    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string)
            + code: `PC` (string)

+ incoming_referrals(array, required)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: referral (string)
                        
+ performer (Reference, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
                    
    
    + display: `Шевченко Олесь Вікторович' (string, required)
+ reasons (array,required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/Reasons` (string)
             + code: `T01` (string)

    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/Reasons` (string)
                + code: `T60` (string)

        
+ diagnoses (array, required, fixed-type)
    + (`Diagnosis_Referrence_Condition`)
        
        
+ actions (array, required, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/Actions`(string)
             + code: `T50` (string)

    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/Actions` (string)
             + code: `T47` (string)
+ division (Reference, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)

### `Cancel_Encounter`
+ encounter (`Encounter_Base` , required, fixed-type)
    + `status`: `entered_in_error` (string)
    + `explanatory_letter`: `Я, Шевченко Наталія Олександрівна, 20.07.2018 здійснила механічну помилку при внесенні обстеження до системи.` (string, required)    
    + `cancellation_reason` (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/cancellation_reasons` (string)
                + code: `misspelling` (string) \\ wrong_patient, misspelling
                    
+ conditions (array, optional, fixed-type)
    + (`Condition_Request`)
        + `verification_status`: `entered_in_error` (string)   
    + (`Condition_Request_2`)
        + `verification_status`: `entered_in_error` (string)
+ observations (array, optional, fixed-type)
    + (`Observation_Request_1`)
        + `status`: `entered_in_error` (string)
+ `allergy_intolerances` (array, optional, fixed-type)
    + (`Allergy_Intolerance_Request`)
        + `verification_status`: `entered_in_error` (string)
+ immunizations (array, optional, fixed-type)
    + (`Immunization_Request`)
        + `status`: `entered_in_error` (string)




## Condition
### `Condition_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/information_sources` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
    + asserter(Reference, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `patient` (string)
                        
        
+ `context` (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `??/ICPC2 (string)
            + code: `A89` (string)
            
+ clinical_status: `active` (string, required)
+ verification_status: `provisional` (string, required)
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: ` http://snomed.info/sct` (string)
            + code: `55604002` (string)
            
    
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: ` http://snomed.info/sct` (string)
                + code: `181414000` (string)
                   
    
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)//Estimated or actual date,  date-time when condition starts
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: ` http://snomed.info/sct` (string)
                + code: `14803004` (string)
                
+ evidences (array, optional, fixed-type)
    + (object)
        + code (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: ` http://snomed.info/sct` (string)
                        + code: `169068008` (string)
                        
        + detail (array, optional, fixed-type)
            + (Reference)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)
                                
        


### `Condition_Request_2`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    + asserter(Reference, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `patient` (string)
                            

        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ `context` (Reference, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `??/ICPC2 (string)
            + code: `K87` (string)
            
+ clinical_status: `active` (string, required)
+ verification_status: `provisional` (string, required)
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: ` http://snomed.info/sct` (string)
            + code: `55604002` (string)
            
    
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: ` http://snomed.info/sct` (string)
                + code: `181414000` (string)
                   
    
+ onset_date: `2018-08-02T10:45:16.000Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: ` http://snomed.info/sct` (string)
                + code: `14803004` (string)
                
+ evidences (array, optional, fixed-type)
    + (object)
        + code (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: ` http://snomed.info/sct` (string)
                        + code: `169068008` (string)
                        
        + detail (array, optional, fixed-type)
            + (Reference)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)
                                
                            
        


### `Condition_Response`
+ id: `6fe6d880-f100-4e39-a278-1d14eb8472ef` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    
    + `asserter` (Reference, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `patient` (string)
                        
        + display: Шевченко Олесь Вікторович (string, required)
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)

                    
+ `context` (Reference, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `ICPC2/Condition` (string)
            + code: `K86` (string)
            
+ clinical_status: `active` (string, required)
+ verification_status: `provisional` (string, required)
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: ` http://snomed.info/sct` (string)
            + code: `24484000` (string)
            
    
+ `body_sites` (array, optional)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: ` http://snomed.info/sct` (string)
             + code: `181414000` (string)
                
    
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: ` http://snomed.info/sct` (string)
                + code: `14803004` (string)
                
+ evidences (array, optional, fixed-type)
    + (object)
        + codes (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: ` http://snomed.info/sct` (string)
                        + code: `169068008` (string)
                        
        + details (array, optional, fixed-type)
            + (Reference)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)
                                
        




## Observation

### `Observation_Request_1`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required)
+ `context` (Reference, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ based_on (array, optional)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `referral` (string)
                        

+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: ` http://snomed.info/sct` (string)
                + code: `vital_signs` (string)
                

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: ` http://snomed.info/sct` (string)
            + code: `10569-2` (string)
            

- One Of
    + effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    + effective_period (Period, optional, fixed-type)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    + `performer` (Reference, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)


+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `http://hl7.org/fhir/v2/0078` (string)
            + code: `L` (string)
            
    
+ comment: `Some comment` (string, optional)
+ `body_site`: 
     + coding (array, fixed-type)
        + (Coding)
            + system: `http://hl7.org/fhir/v2/0078` (string)
            + code: `1341001:272741003=7771000` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `http://hl7.org/fhir/v2/0078` (string)
            + code: `255459008` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lower_limit (number, optional)// decimal Lower limit of detection
        + upper_limit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: ` http://snomed.info/sct` (string)
                    + code: `normal` (string)
                        
        + `applies_to`(Codeable_Concept, optional)
            
            +  coding (array, fixed-type)
                + (Coding)
                    + system: ` http://snomed.info/sct` (string)
                    + code: `male` (string)
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ reaction_on (Reference, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `immunization` (string)
    
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_string: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.` (string, required)
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `http://hl7.org/fhir/v2/0078` (string)
                    + code: `L` (string)
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                + type (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: ` http://snomed.info/sct` (string)
                            + code: `normal` (string)
                                
                + applies_to (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: ` http://snomed.info/sct` (string)
                            + code: `male` (string)
                             
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)
                
    

### `Observation_Request_2`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required)
+ `context` (Reference, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ based_on (array, optional)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `referral` (string)
                        

+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string)
                

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observations_codes` (string)
            + code: `10569-2` (string)
            

- One Of
    + effective_period (Period, optional, fixed-type)
    + effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
    + `performer` (Reference, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)

+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string)
            
    
+ comment: `Some comment` (string, optional)
+ `body_site`: 
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string)
            + code: `1341001:272741003=7771000` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `255459008` (string)
            

- One Of
    + value_period (Period, required)
    + value_date_time (string, required)
    + value_time: `18:31:42` (string, required)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_range (Range, required, fixed-type)
    + value_boolean: true (boolean, required)
    + value_string: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.` (string, required) 
    + value_sampled_data (object, required)
        + origin: `2048` (number, optional) //SimpleQuantity Zero value and units
        + period: `10` (number, optional) // decimal Number of milliseconds between samples
        + factor: `1.612` (number, optional) // decimal Multiply data by this before adding to origin
        + lower_limit: `-3300` (number, optional)// decimal Lower limit of detection
        + upper_limit: `3300` (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions: `1` (number, optional) // positiveInt Number of sample points at each time point
        + data: `2041 2043 2037 2047 2060 2062 2051 2023 2014 2027 2034 2033 2040 2047 2047 2053 2058 2064 2059 2063 2061 2052 2053 2038 1966 1885 1884 2009 2129 2166 2137 2102 2086 2077 2067 2067 2060 2059 2062 2062 2060 2057 2045 2047 2057 2054 2042 2029 2027 2018 2007 1995 2001 2012 2024 2039 2068 2092 2111 2125 2131 2148 2137 2138 2128 2128 2115 2099 2097 2096 2101 2101 2091 2073 2076 2077 2084 2081 2088 2092 2070 2069 2074 2077 2075 2068 2064 2060 2062 2074 2075 2074 2075 2063 2058 2058 2064 2064 2070 2074 2067 2060 2062 2063 2061 2059 2048 2052 2049 2048 2051 2059 2059 2066 2077 2073` (string, required) // Decimal values with spaces, or "E" | "U" | "L"
   
    
    
  
    


    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
        +  coding (array, fixed-type)
             + (Coding)
                + system: `eHealth/gender` (string)
                + code: `male` (string)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string)
                        
        + `applies_to`(Codeable_Concept, optional)
            
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string)
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
        
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            + value_string (string, required)
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/observation_interpretations` (string)
                    + code: `L` (string)
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                + type (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_types` (string)
                            + code: `normal` (string)
                                
                + applies_to (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_applications` (string)
                            + code: `male` (string)
                             
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)



### `Observation_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required)
+ `context` (Reference, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ based_on (array, optional)
    + (Reference)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `referral` (string)
                    

+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: ` http://snomed.info/sct` (string)
                + code: `vital_signs` (string)

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: ` http://snomed.info/sct` (string)
            + code: `10569-2` (string)
            

- One Of
    + effective_date_time: `2018-10-08T09:46:37.694Z` (string, optional)
    + effective_period (Period, optional)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)

+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
        + display: Шевченко Олесь Вікторович (string, required)
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)

+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: eHealth/observation_interpretations` (string)
            + code: `L` (string)
            
    
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string)
            + code: `1341001:272741003=7771000` (string)
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_methods` (string)
            + code: `255459008` (string)
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lowerLimit (number, optional)// decimal Lower limit of detection
        + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: ` http://snomed.info/sct` (string)
                    + code: `normal` (string)
                        
        + `applies_to` (array, optional)
            + (Codeable_Concept)
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: ` http://snomed.info/sct` (string)
                        + code: `male` (string)
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            + value_string (string, required)
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `http://hl7.org/fhir/v2/0078` (string)
                    + code: `L` (string)
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                    + type (Codeable_Concept, optional)
                        +  coding (array, fixed-type)
                            + (Coding)
                                + system: ` http://snomed.info/sct` (string)
                                + code: `normal` (string)
                                   
                + `applies_to` (array, optional)
                    + (Codeable_Concept)
                        +  coding (array, fixed-type)
                            + (Coding)
                                + system: ` http://snomed.info/sct` (string)
                                + code: `male` (string)
                            
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)
                
                

## `Immunization`

### `Immunization_Request`
 
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: ` http://snomed.info/sct` (string)
            + code: `FLUVAX` (string)
            

+ context : ( Reference, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date

+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ legal_entity : ( Reference, optional), // Where vaccination occurred
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site : ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string)
            + code: `LA` (string)
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string)
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, optinal)
    + system: `eHealth/dose_quantities` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        + `reasons` : (array, optional, fixed_type) // Why immunization occurred
            + (Codeable_Concept)
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/reason_explanations` (string)
                        + code: `429060002` (string)
                         
        + `reasons_not_given` : (array, optional, fixed_type), // Why immunization did not occurr
            + (Codeable_Concept)
  ),
+ reactions : (array, optional) // Details of a reaction that follows immunization
    + (object)
        + date : `2018-10-08T09:46:37.694Z` (string, optional), // When reaction started
        + detail : ( Reference, optional) , // Additional information on reaction Observation
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)
                           
        + reported : `true` (boolean, optional) // Indicates self-reported reaction

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string)
                        
        + `dose_status` : ( Codeable_Concept, required), // Indicates if dose counts towards immunity
           +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_dose_statuses` (string)
                    + code: `count` (string)
                    
        + `dose_status_reason` : ( Codeable_Concept,optional)  // Why dose does (not) count
           +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_dose_statuse_reasons` (string)
                    + code: `coldchbrk` (string)
                    


### `Immunization_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: ` http://snomed.info/sct` (string)
            + code: `FLUVAX` (string)
            

+ context : ( Reference, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date

+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
        + display: `Шевченко Тетяна Вікторівна`    (string, required)            
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ legal_entity : ( Reference, optional), // Where vaccination occurred
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site : ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/body_sites` (string)
            + code: `LA` (string)
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string)
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, optinal)
    + system: `eHealth/dose_quantities` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        + `reasons` : (array, optional, fixed_type) // Why immunization occurred
            + (Codeable_Concept)
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/reason_explanations` (string)
                        + code: `429060002` (string)
                         
        + `reasons_not_given` : (array, optional, fixed_type), // Why immunization did not occurr
            + (Codeable_Concept)
  ),
+ reactions : (array, optional) // Details of a reaction that follows immunization
    + (object)
        + date : `2018-10-08T09:46:37.694Z` (string, optional), // When reaction started
        + detail : ( Reference, optional) , // Additional information on reaction Observation
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)
                           
        + reported : `true` (boolean, optional) // Indicates self-reported reaction

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string)
                        
        + `dose_status` : ( Codeable_Concept, required), // Indicates if dose counts towards immunity
           +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_dose_statuses` (string)
                    + code: `count` (string)
                    
        + `dose_status_reason` : ( Codeable_Concept,optional)  // Why dose does (not) count
           +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_dose_statuse_reasons` (string)
                    + code: `coldchbrk` (string)
                    


## `Allergy_Intolerance`
### `Allergy_Intolerance_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ clinical_status : `active` (string, required), // C? active | inactive | resolved
+ verification_status : `confirmed` (string, required), // C? R!  unconfirmed | confirmed | refuted | entered-in-error
+ type : `allergy` (string, required), // allergy | intolerance - Underlying mechanism (if known)
+ category : `food`(string, required), // food | medication | environment | biologic
+ criticality : `low`(string, required), // low | high | unable-to-assess
+ context (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code  ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/allergy_intolerances_codes` (string)
            + code: `227493005` (string)

+ onset_date_time : `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, required)

+ primary_source: `true` (boolean, required)
- One Of
    + asserter (Reference, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ last_occurrence : `2017-10-08T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction


### `Allergy_Intolerance_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ clinical_status : `active` (string, required), // C? active | inactive | resolved
+ verification_status : `confirmed` (string, required), // C? R!  unconfirmed | confirmed | refuted | entered-in-error
+ type : `allergy` (string, required), // allergy | intolerance - Underlying mechanism (if known)
+ category : `food`(string, required), // food | medication | environment | biologic
+ criticality : `low`(string, required), // low | high | unable-to-assess
+ context: (Reference, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code : ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/allergy_intolerances_codes` (string)
            + code: `227493005` (string)
                

+ onset_date_time : `2016-01-01T00:00:00.000Z` (string, required)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    + asserter (Reference, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
        + display: Шевченко Олесь Вікторович (string, required)
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
            
        + text: `Галина Олександрівна` (string)
+ last_occurrence : `2018-07-02T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction



### Job
+ status: `pending` (string, required) - status of request processing.
+ eta: `2018-08-02T10:45:16.000Z` (string, optional) - estimated time of arrival
+ status_code: `202` (string, optional) - processing result. Is relevant only for the processed jobs
+ links (array, required, fixed-type)
    + (object)
        + include `Link`

### Job_Error
+ status: `error` (string, required) - status of request processing
+ status_code: `422` (string, required) - processing result
+ errors (array, optional, fixed-type)
    + (object)
        + include `Error`

### Error
+ code: 422 (string, required)
+ type: type_atom (string, required) - Atom that represents error type.
+ message: Error description (string, required) - Human-readable error message. This is for developers, not end-users.


### Link
+ entity: `job` (string, required) - name of the entity that link follows to
+ href: `/Jobs/NBXk9EyErUZv1RhXgyvgg` (string, required) - link to entity

### Search_params
+ `page`: 2 (number) - Page number.    
+ `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ `encounter_id`: 09dc3ed7-2169-45d8-8fa3-d918c6839bf9
+ `episode_id`: f48d1b6c-a021-4d6a-a5a4-aee93e152ecc
+ `inserted_at_from`:`1990-01-01`
+ `inserted_at_to`: `2000-01-01`