FORMAT: 1A
HOST: http://ehealth.edenlabllc.com/

# eHealth Medical Events API

Environment: **DEVELOPMENT**

> In order to get specification for PREPROD/PROD environment please proceed [here](https://medicaleventsmisapi.docs.apiary.io/#)

> Read more about eHealth API Manifest [here](https://ehealthapimanifest.docs.apiary.io/#introduction/interacting-with-api)

All the medical data, stored in eHealth, belongs to the patient and must be properly protected. eHealth provides several mechanisms to secure patient's data and limitate access.

1. Only authenticated user with appropriate scope can access medical data
List of scopes available for the specific user role can be recieved using [/roles endpoint](https://ehealthmisapi1.docs.apiary.io/#reference/public.-medical-service-provider-integration-layer/roles/list-roles) [wiki: Scopes data model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583404101/Scopes+model)
2. Access to Patient Medical Data is driven by Attribute-based access control(ABAC). Rules [https://github.com/edenlabllc/ehealth.abac.api/blob/develop/apps/rules/priv/features/medical_events.feature]
3. Patient is able to grant access to specific episode(s) for specific users. User with this approval can view episode details and its nested entities
4. Post methods are async

![Access policy](https://image.ibb.co/fOPoTV/Referrals-Medical-events-usage.png)


## About ABAC
Some routes in eHealth are managed not only by scope-based  model, but Atribute Bаsed Access Control (ABAC) model.
Routes, that responds with lists, are not designed to cut responses automatically(show only allowed items). In order to access list, user should specify filters (search params) to cut entities that are not allowed by ABAC rules. 
For example,
- to access this route:
 `/patient/{patient_id}/conditions`
user should have approval on ALL patients medical data, otherwise the response will be 403.
- But, by specifinig filters, user can access requested data, if one of the ABAC rules returns true:
 `/patient/{patient_id}/conditions?episode_context={episode_1}`

Here you can find the list of current [rules](https://github.com/edenlabllc/ehealth.abac.api/blob/develop/apps/rules/priv/features/medical_events.feature).
# Group Medical Events
Medical events API is a set of web services designed to provide methods of communication between eHealth Medical Data Storage and medical information systems (MIS).
Medical events API is based on the international framework for exchanging digital health records - FHIR( Release 3 (STU)). Most of  major resources, data types, data structures and their way of interpretation are inherited from FHIR. However, there are minor сhanges described in Apiary.
To find out more about business logic behind the API read [this](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402836/Medical+Events+API).
###Sequence diagram
In order to provide a consistency of submitted data the established flow should be followed:
![Contract request flow](https://www.websequencediagrams.com/cgi-bin/cdraw?lz=dGl0bGUgU3VibWl0dGluZyBtZWRpY2FsIGRhdGEgcGFja2FnZQoKcGFydGljaXBhbnQgTUlTIGFzIG1zcAAKDWVIZWFsdGggYXMgZWgABgUAKQ1Eb2N1bWVudCBzdG9yYWdlIGFzAAMICgoKbXNwLT4AMAc6IDw8U2VhcmNoIGZvciBhIHBlcnNvbj4-CgBRBy0-bXNwOiA8PFJlc3BvbnNlIHdpdGgAIAdzIGlkcz4-Cm9wdABIDjw8Q3JlYXRlIGVwaXNvZGUARAwAgSoHIDoAHAdhc3luYyBqb2IAZQ4AaghkAGsGam9iIGlkADUTOiAAXQ4AgU4RR2V0ADkFYnkAMg8AgUwNAFwLZGV0YWlscz4-CmVuZACBSBRVcGQAdGgAXQ4AgQxQAIQFBgCDXAUAgygIbmNvdW50ZXIAhQYJABkKU2lnbgAJGACEQwwAhVsFADgSAIMwVACFWQc6IFNhdmUgc2lnbmVkIGNvbnRlbnQgdG8AhWwJAIQjElByb2Nlc3MAgS0ZAIN7OwCFehRsb3MAhSZnAF4MAIVATAoKCgoKCgoK&s=modern-blue)

## Encounter Data Package [/api/patients/{id}/encounter_package]

### Submit Encounter Package [POST]

Using this web service you can submit:

Object| Required| Part of Signed content
-------|---------|------
Visit| 0-1 | false
Encounter| 1-1 |true
Condition| 0-* |true
Observation| 0-* |true
Allergy intolerance| 0-* |true
Immunization| 0-* |true
Risk assessment|0-*| true
Device|0-*| true
Medication statement|0-*|true
Medication administration|0-*|true
Diagnostic report|0-*| true
Procedure|0-*| true


You can send the same request (with the same body) multiple times, but a new job will not be created before previous is not performed.

To find out more about the process of encounter package creation read [Confluence Submit Encounter Data Package ](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402843/Submit+Encounter+Data+Package).



+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Submit_Encounter_Package`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)



### Get async Job processing details [GET /api/jobs/{id}]
This resource should be used to get the processing status of the async job.

>Read more about [job processing algorithms.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402225/Medical+events+Technical+Documentation)



+ Parameters
    + id: `NBXk9EyErUZv1RhXgyvgg` (string, required) - request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer 342432fdsfdsgfdt24535422fgds

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Job`)

+ Response 303 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 303 (number)
        + data (`Job`)
            + status: `processed`
            + status_code: `200`
            + links (array, required, fixed-type)
                + (object)
                    + entity: `encounter` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/encounters/90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
                + (object)
                    + entity: `condition` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/conditions/df112200-64da-451b-bf77-8e7655bbd48f` (string, required)
                + (object)
                    + entity: `observation` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/observations/d118cc02-3b9b-4d1a-b728-eda4e3d58f25` (string, required)
                + (object)
                    + entity: `allergy_intolerance` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/allergy_intolerances/5f41c64a-6742-4d6d-9f3b-c6742b2ee0a1` (string, required)
                + (object)
                    + entity: `immunization` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/immunizations/12e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `risk_assessment` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/risk_assessments/22e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `device` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/devices/32e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `medication_statemet` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/medication_statemets/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `medication_administration` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/medication_administration/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `diagnostic_report` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/diagnostic_reports/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                + (object)
                    + entity: `procedure` (string, required)
                    + href: `{host}/api/patients/3da18c10-d2ca-469e-bde5-7413201cea2/procedure/42e5985d-2a79-452f-8bc4-ed3a02fdefc5` (string, required)
                
+ Response 200 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Job_Error`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Object not found` (string)

### Dummy Encounter Package [POST]

+ Request Encounter with new Condition (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (Encounter_Request)
        
    
#### Dummy Condition [POST]
This chapter describes the structure of a single unsigned condition that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Condition_Request`)
    
    
#### Dummy Observation [POST]
This chapter describes the structure of a single unsigned observation that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request 1 (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Observation_Request_1`)
    
    
+ Request 2 (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Observation_Request_2`)

        
        
    
#### Dummy Immunization [POST]
This chapter describes the structure of a single unsigned immunization that could be submitted as a part of Encounter Package. This is not an actual web-service.

The `explanation` field can take one of the following values (array, optional, fixed_type):

Object           |Coding system
-----------------|-------------------------------------| 
reasons          |eHealth/reasons_not_given            |
reasons_not_given|eHealth/reason_not_given_explanations|

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Immunization_Request`) 
    
#### Dummy Allergy_Intolerance [POST]
This chapter describes the structure of a single unsigned allergy_intolerance that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Allergy_Intolerance_Request`)

#### Dummy Risk_Assessment [POST]
This chapter describes the structure of a single unsigned risk_assessment that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Risk_Assessment_Request`)

#### Dummy Device [POST]
This chapter describes the structure of a single unsigned device that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Device_Request`)


#### Dummy Medication Stetement [POST]
This chapter describes the structure of a single unsigned medication statement that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Medication_Statement_Request`)
    
    
#### Dummy Diagnostic report [POST]
This chapter describes the structure of a single unsigned diagnostic report that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Diagnostic_Report_EncounterPCG_Request`)


#### Dummy Procedure [POST]
This chapter describes the structure of a single unsigned procedure that could be submitted as a part of Encounter Package. Procedure in Encounter Package does not need to have reference to Service Request. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Procedure_EncounterPCG_Request`)  

#### Dummy Medication Administration [POST]
This chapter describes the structure of a single unsigned medication that could be submitted as a part of Encounter Package. This is not an actual web-service.

+ Request  (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Medication_Administration_EncounterPCG_Request`) 

### Cancel Encounter Package [PATCH]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402534/Cancel+Encounter+Data+Package+WS)
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
            + signed_data: `ew0KICAicGVyaW9kIjogew0KIC...` (string, required)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)


### Cancel Encounter Package Dummy[PATCH]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Cancel_Encounter`) 

+ Response 200 (application/json)
   

## Episode of Care [/api/patients/{id}/episodes]
Episode of care is a resource that contains general information about a patient`s medical case, such as care manager and diagnoses history.
### Create Episode  [POST]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402023/Create+Episode)
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Episode_Of_Care_Request`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Episode by id[GET /api/patients/{patient_id}/episodes/{episode_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Episode identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data(`Episode_Of_Care_Response`)
    

### Get Episodes by search params [GET /api/patients/{patient_id}/episodes{?period_from,period_to,page,page_size,status}]
Use period_from period_to to find episodes that were active in a certain period of time


**Scopes required:** `TBD`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `period_from`: `2017-01-01` (string, optional)
    + `period_to`: `2018-01-01` (string, optional)
    + `code`: `R80` (string, optional)
    + `status`: `active` (string, optional)
    + `managing_organization_id`: `80a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, optional)

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Response`])
        


### Get Approved Episodes [GET /api/patients/{patient_id}/episodes/approved]

This web service returns episodes, that patient gave approvals to read by a current employee.
**Scopes required:** `TBD`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code` : `R80` (string, optional) - current diagnosis code

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Response`])

### Update Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402015/Update+Episode)
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request Package (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + include `Update_Episode`

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Close Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/close]
Read more about [business logic and validations.](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402019/Close+Episode)
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request  (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Close_Episode`


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Cancel Episode [PATCH /api/patients/{patient_id}/episodes/{episode_id}/actions/cancel]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier

+ Request  (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + include `Cancel_Episode`


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get encounters in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/encounters{?date_from,date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `date_from`:`1990-01-01`(string, optional)
    + `incoming_referral`: `f10aeafb-0df2-4091-bc83-f07e92a100ae` (string, optional)
    + `date_to`: `2000-01-01`(string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `origin_episode_id`: `d11aeafb-0df2-4091-bc83-f07e92a100af` (string, optional)

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Encounter_Response`], fixed-type)

### Get encounter details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/encounters/{encounter_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `encounter_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Encounter identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Encounter_Response`)

### Get conditions in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/conditions{?code,onset_date_from,onset_date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `A20` (string, optional)
    + `onset_date_from`:`1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`], fixed-type)

### Get conditions details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/conditions/{condition_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `condition_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Condition identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`)

### Get observations in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/observations{?code,issued_from,issued_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `10569-2` (string, optional)
    + `issued_from`:`1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`], fixed-type)

### Get observation details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/observations/{observation_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `observation_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Observation identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`)

### Get allergy intolerances in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/allergy_intolerances{?code,onset_date_time_from,onset_date_time_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `code`: `227493005` (string, optional)
    + `onset_date_time_from`:`1990-01-01` (string, optional) 
    + `onset_date_time_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`], fixed-type)

### Get allergy intolerance details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/allergy_intolerances/{allergy_intolerance_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `allergy_intolerance_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Allergy intolerance identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`)

### Get immunizations in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/immunizations{?code,date_from,date_to,page,page_size}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `vaccine_code`: `wex-10` (string, optional)
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional)
    + `page`: `2` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

### Get immunization details in episode context [GET /api/patients/{patient_id}/episodes/{episode_id}/immunizations/{immunization_id}]
+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `episode_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Episode identifier
    + `immunization_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Immunization identifier

+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`)

## Encounter [/api/patients/{id}/encounters]

### Get Encounter by id[GET /api/patients/{patient_id}/encounters/{encounter_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `encounter_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Encounter identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Encounter_Response`)
    

### Get Encounters by search params[GET /api/patients/{patient_id}/encounters{?date_from,date_to,episode_id,page,page_size}]
+ Parameters
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `date_from`:`1990-01-01`(string, optional)
    + `date_to`: `2000-01-01`(string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `incoming_referral_id`: `f10aeafb-0df2-4091-bc83-f07e92a100ae` (string, optional)
    + `origin_episode_id`: `d11aeafb-0df2-4091-bc83-f07e92a100af` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Encounter_Response`])

## Conditions [/api/patients/{patient_id}/conditions]

### Get Condition by id [GET /api/patients/{patient_id}/conditions/{condition_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `condition_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Condition identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`)
    

### Get Conditions by search params [GET /api/patients/{patient_id}/conditions{?encounter_id,episode_id,onset_date_from,onset_date_to,code,page,page_size}]
+ Parameters
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `onset_date_from`:`1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`])
    

## Observation [/api/patients/{patient_id}/observation/{id}]

### Get Observation by id[GET /api/patients/{patient_id}/observations/{observation_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `observation_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Observation identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`)
    

### Get Observations by searсh params[GET /api/patients/{patient_id}/observations{?encounter_id,diagnostic_report_id,episode_id,code,issued_from,issued_to,page,page_size}]
+ Parameters
    + `page`: `1` (number, optional) - Page number    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `10569-2` (string, optional)
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `diagnostic_report_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional)
    + `issued_from`:`1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`])



## Allergy Intolerance [/api/patients/{patient_id}/allergy_intolerances/{id}]

### Get Allergy Intolerance by id[GET /api/patients/{patient_id}/allergy_intolerances/{allergy_intolerance_id}]

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `allergy_intolerance_id`: `a10aeafb-0df2-4091-bc83-f07e92a100ae` (string, required) - Allergy intolerance identifier
 
+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`)

### Get Allergy Intolerances by search params[GET /api/patients/{patient_id}/allergy_intolerances{?encounter_id,episode_id,code,onset_date_time_from,onset_date_time_to,page,page_size}]

+ Parameters
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `227493005` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `onset_date_time_from`:`1990-01-01` (string, optional)
    + `onset_date_time_to`: `2000-01-01` (string, optional)

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`])



## Immunization [/api/patients/{patient_id}/immunizations]

### Get Immunization by id [GET /api/patients/{patient_id}/immunizations/{immunization_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + immunization_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`)

### Get Immunizations by search params [GET /api/patients/{patient_id}/immunizations{?vaccine_code,date_from,date_to,page,page_size,code,encounter_id,episode_id}]

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `vaccine_code`: `wex-10` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

## Risk Assessment [/api/patients/{patient_id}/risk_assessments]

### Get Risk Assessment by id [GET /api/patients/{patient_id}/risk_assessments/{risk_assessment_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + risk_assessment_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Risk_Assessment_Response`)

### Get Risk Assessments by search params [GET /api/patients/{patient_id}/risk_assessments{?code,asserted_date_from,asserted_date_to,page,page_size,encounter_id,episode_id}]

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `R80` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `f48d1b6c-a021-4d6a-a5a4-aee93e152ecc` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Risk_Assessment_Response`], fixed-type)


## Device [/api/patients/{patient_id}/devices]

### Get Device by id [GET /api/patients/{patient_id}/devices/{device_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + device_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Device_Response`)

### Get Devices by search params [GET /api/patients/{patient_id}/devices{?asserted_date_from,asserted_date_to,page,page_size,type,encounter_id,episode_id}]

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `type`: `spine_board` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Device_Response`], fixed-type)


## Medication Statement [/api/patients/{patient_id}/medication_statements]
### Get Medication Statement by id  [GET /api/patients/{patient_id}/medication_statements/{medication_statement_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + medication_statement_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medication_Statement_Response`)

### Get Medication Statement by search params [GET /api/patients/{patient_id}/medication_statements/{?asserted_date_from,asserted_date_to,page,page_size,medication_code,encounter_id,episode_id}]
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `medication_code`: `spine_board` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Medication_Statement_Response`], fixed-type)

## Medication Administration [/api/patients/{patient_id}/medication_administrations]
### Get Medication Administration by id  [GET /api/patients/{patient_id}/medication_administrations/{medication_administration_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + medication_administration_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique medication administration identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medication_Administration_Response`)

### Get Medication Administration by search params [GET /api/patients/{patient_id}/medication_administrations/{?asserted_date_from,asserted_date_to,page,page_size,medication_code,encounter_id,episode_id}]
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + status: `completed` (string, optional) 
    + category_code: `409063005` (string, optional) - Type of medication usage
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) - unique identifier
    + `episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `managing_organization_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `medication_request_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `performed_date_from`: `1990-01-01` (string, optional) 
    + `performed_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Medication_Administration_Response`], fixed-type)

## Diagnostic Report Data Package [/api/patients/{id}/diagnostic_report_package]

### Submit Diagnostic Report  Package [POST]

Using this web service you can submit:

Object| Required| Part of Signed content
-------|---------|------
Observation| 0-* |true
Diagnostic report|1-1| true

To find out more about the process of diagnostic report package creation read [Confluence Submit Encounter Data Package ](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402843/Submit+Encounter+Data+Package).

+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + `signed_data` : 'ew0KICAicGVyaW9kIjogew0KIC...' (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)     
            

### Dummy Submit Diagnostic Report Package [POST]            
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Submit_DR_Package`

### Cancel Diagnostic Report Package[PATCH]
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + `signed_data` : 'ew0KICAicGVyaW9kIjogew0KIC...' (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)
            

### Dummy Cancel Diagnostic Report Package [PATCH]          
+ Request Package (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (object)
        + include `Submit_DR_Package_Cancel`

## Diagnostic Report [/api/patients/{patient_id}/diagnostic_reports]
### Get Diagnostic Report by id [GET /api/patients/{patient_id}/diagnostic_reports/{diagnostic_report_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + diagnostic_report_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique DR identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (`Diagnostic_Report_Response`)

### Get Diagnostic Report by search params [GET /api/patients/{patient_id}/diagnostic_reports/{?issued_from,issued_to,page,page_size,code,encounter_id,context_episode_id, origin_episode_id}]
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `12345` (string, optional) 
    + `encounter_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `context_episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `origin_episode_id`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional)
    + `issued_from`: `1990-01-01` (string, optional) 
    + `issued_to`: `2000-01-01` (string, optional) 
    + `based_on`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    + `managing_organization_id`: `19dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Diagnostic_Report_Response`], fixed-type)
        
        

### Get Approved Diagnostic Reports  [GET /api/patients/{patient_id}/diagnostic_reports/approved{?page,page_size,code}]
This web service allows to get a list of diagnostic reports that were allowed to read by the doctor via patients approval.

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `09dc3ed7-2169-45d8-8fa3-d918c6839bf9` (string, optional) - id of a service
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Diagnostic_Report_Response`], fixed-type)

## Procedures [/api/patients/{patient_id}/procedures]

### Create procedure [POST]
This WS allows to register procedure by its own. Also prosedure can be registered as a part of [encounter package](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package).
**Scopes required:** `procedure:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)
    + Headers
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy create procedure [POST]
This chapter describes the structure of a single procedure creation. This is not an actual web-service.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
    + Attributes (`Procedure_Request`)
 
### Get Procedures by ID [GET /api/patients/{patient_id}/procedures/{id}]
**Scopes required:** `procedure:read`

+ Parameters
    + id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique procedure identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Procedure_Response`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Procedures by search params [GET /api/patients/{patient_id}/procedures{?id,status,episode_id,encounter_id,code,based_on,recorded_by,managing_organization_id}]
**Scopes required:** `procedure:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + episode_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique episode identifier, look into episode in encounter
    + status: COMPLETED (enum, optional) - status of procedure
    + based_on: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique service request identifier
    + `code`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + `managing_organization_id`: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique legal entity identifier
    + encounter_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) - Unique encounter identifier
    + `origin_episode_id`: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique episode identifier, look into episode in procedures.origin_episode

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Procedure_Response`])


### Cancel Procedure [PATCH /api/patients/{person_id}/procedures/{id}/actions/cancel]

This WS allows to cancel existing procedure and change its status to `entered_in_error` in case of any mistake. The new correct procedure could be created instead.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of procedure must be equal to procedure stored in DB. See [Get Procedure by search params](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/procedures/get-procedure-by-search-params)
2. `status_reason` and `explanatory_letter` (optional) must be added to signed content

Please see [Cancel Procedure]() and [Dummy Cancel Procedure for more details


**Scopes required:** `procedure:write`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Cancel Procedure [PATCH]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (Procedure_Request)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/procedure_cancel_reasons` (string)
                    + code: `default` (string)
        + `explanatory_letter`: `Процедура була відмінена у зв'язку з помилкою при виборі пацієнта ` (string, optional)
        + `status` : `ENTERED_IN_ERROR` (required) - Status for provided procedure
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

## Patient Summary [/api/patients/{patient_id}/summary]

----
**Patient Summary** - is a set of services that provides access to the patient's basic Medical Data.
Patients summary shows only entities that are not in status `entered-in-error`. 

Basic Medical Data includes the following entities:

Entity                      | Access level 
----------------------------|-------------
Episode                     | Short list of episodes
Allergy Intolerance         | All *Allergy Intolerances* are available for Patient Summary
Immunizations               | All *Immunizations* are available for Patient Summary
Conditions                  | Only specific *Conditions* are available for Patient Summary. Restrictions is based on *condition.code*
Observations                | Only specific *Observations* are available for Patient Summary. Restrictions is based on *observation.code*
Diagnoses                   | Only current diagnoses related to active *Episodes* that refer to specific *Conditions* are available for Patient Summary. Restrictions is based on *condition.code*
Risk Assessment             | All patient's risk assessments
Device                      | All patient`s devices
Medication Statment         | All patient`s medication statments
Diagnostic Report           | Only specific *Diagnostic Reports* are available for Patient Summary
Procedure                   | Only specific *Procedures* are available for Patient Summary


### Get Short Episodes by search params [GET /api/patients/{patient_id}/summary/episodes{?period_from,period_to,page,page_size}]

This web service returns brief information in order not to disclose confidential and sensitive data. Access to full episode data is restricted by patient's approval.
If you have an approval - you can obtain episode details and nested entities through `/episode/:id/*` web services.

**Scopes required:** `TBD`

+ Parameters
    + `patient_id`: `70a9e15b-b71b-4caf-8f2e-ff247e8a5677` (string, required) - Patient identifier
    + `page`: 2 (number, optional) - Page number
    + `page_size`: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `period_from`: `2017-01-01` (string, optional)
    + `period_to`: `2018-01-01` (string, optional)
+ Request (application/json)
    + Headers
    
            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data(array[`Episode_Of_Care_Short`])
        

### Get Immunizations [GET /api/patients/{patient_id}/summary/immunizations{?page,page_size,code,date_from,date_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `vaccine_code`: `wex-10` (string, optional)
    + `date_from`: `1990-01-01` (string, optional) 
    + `date_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Immunization_Response`], fixed-type)

### Get Immunization by id [GET /api/patients/{patient_id}/summary/immunizations/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Immunization_Response`, fixed-type)

### Get Allergy Intolerances [GET /api/patients/{patient_id}/summary/allergy_intolerances{?page,page_size,code,onset_date_time_from,onset_date_time_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `2` (number, optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `227493005` (string, optional) 
    + `onset_date_time_from`: `1990-01-01` (string, optional) 
    + `onset_date_time_to`: `2000-01-01` (string, optional) 

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Allergy_Intolerance_Response`], fixed-type)

### Get Allergy Intolerance by id [GET /api/patients/{patient_id}/summary/allergy_intolerances/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique allergy intolerance identifier
 
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Allergy_Intolerance_Response`, fixed-type)

### Get Observations [GET /api/patients/{patient_id}/summary/observations{?page,page_size,code,issued_from,issued_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number, optional) - Page number
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `10569-2` (string, optional)
    + `issued_from`: `1990-01-01` (string, optional)
    + `issued_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Observation_Response`], fixed-type)

### Get Observation by id [GET /api/patients/{patient_id}/summary/observations/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique observation identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Observation_Response`, fixed-type)

### Get Conditions [GET /api/patients/{patient_id}/summary/conditions{?page,page_size,code,onset_date_from,onset_date_to}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)
    + `onset_date_from`: `1990-01-01` (string, optional)
    + `onset_date_to`: `2000-01-01` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Condition_Response`], fixed-type)

### Get Condition by id [GET /api/patients/{patient_id}/summary/conditions/{id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique condition identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Condition_Response`, fixed-type)

### Get active Diagnoses [GET /api/patients/{patient_id}/summary/diagnoses]

This endpoint returns current diagnoses related only to active episodes. In order to get specific condition details, use [Get Condition by ID](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/patient-summary/get-condition-by-id)

**Scopes required:** `patient_summary:read`

+ Parameters
    + `patient_id`: `7a489bbd-d8e2-48d9-92fd-fcf0102f7b08` (string, required) - Unique patient identifier
    + `page`: `1` (number,optional) - Page number.    
    + `page_size`: `50` (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `A20` (string, optional)

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)




### Get Risk Assessment by id [GET /api/patients/{patient_id}/summary/risk_assessments/{risk_assessment_id}]

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + risk_assessment_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique immunization identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Risk_Assessment_Response`)

### Get Risk Assessments by search params [GET /api/patients/{patient_id}/summary/risk_assessments{?code,asserted_date_from,asserted_date_to,page,page_size,encounter_id,episode_id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `R80` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Risk_Assessment_Response`], fixed-type)

### Get Device by id [GET /api/patients/{patient_id}/summary/devices/{device_id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + device_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Device_Response`)

### Get Devices by search params [GET /api/patients/{patient_id}/summary/devices{?asserted_date_from,asserted_date_to,page,page_size,type,encounter_id,episode_id}]

**Scopes required:** `patient_summary:read`

+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `type`: `spine_board` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 

### Get Medication Statement by id  [GET /api/patients/{patient_id}/summary/medication_statements/{medication_statement_id}]
**Scopes required:** `patient_summary:read`
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + medication_statement_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique device identifier

+ Request (application/json)
    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_OK`)
        + data (`Medication_Statement_Response`)

### Get Medication Statement by search params [GET /api/patients/{patient_id}/summary/medication_statements/{?asserted_date_from,asserted_date_to,page,page_size,medication_code,encounter_id,episode_id}]
**Scopes required:** `patient_summary:read`
+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `medication_code`: `spine_board` (string, optional) 
    + `asserted_date_from`: `1990-01-01` (string, optional) 
    + `asserted_date_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Medication_Statement_Response`], fixed-type)

### Get Diagnostic Report by id [GET /api/patients/{patient_id}/summary/diagnostic_reports/{diagnostic_report_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + diagnostic_report_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique DR identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (`Diagnostic_Report_Response`)

### Get Diagnostic Report by search params [GET /api/patients/{patient_id}/summary/diagnostic_reports/{?issued_from,issued_to,page,page_size,code,encounter_id,context_episode_id, initial_episode_id}]


+ Parameters
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
    + `code`: `12345` (string, optional) 
    + `issued_from`: `1990-01-01` (string, optional) 
    + `issued_to`: `2000-01-01` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (array[`Diagnostic_Report_Response`], fixed-type)

### Get Procedure by id [GET /api/patients/{patient_id}/summary/procedures/{procedure_id}]
+ Parameters
    + patient_id: `e549c257-232e-4dab-9f1e-b2322cac3968` (string, required) - Unique patient identifier
    + procedure_id: `340b86fd-23f3-4a33-94c5-8ec19d116c33` (string, required) - Unique procedure identifier
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

+ Response 200 (application/json)
    + Attributes (`Response_Collection`)
        + data (`Procedure_Response`)

### Get Procedures by search params [GET /api/patients/{patient_id}/summary/procedures{?status,episode_id,code,service_request_id,recorded_by,managing_organization_id}]
**Scopes required:** `patient_summary:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + status: COMPLETED (enum, optional) - status of procedure
    + `code`: `12345` (string, optional) 
    + `page`: 2 (number, optional) - Page number.    
    + `page_size`: 50 (number, optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50


+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Procedure_Response`])

# Group Service Requests

## Manage Service Requests in patient context [/api/patients/{patient_id}/service_requests]

Use [GET Service Catalog](https://uaehealthapi.docs.apiary.io/#reference/public.-medical-programs/medical-program/get-services-dictionary) to receive current catalog of services. 

### PreQualify Service Request [POST /api/patients/patient_id/service_requests/prequalify]

This method is used to pre-qualify service request in order to define whether the medical program could be applied in this particular case or not.
**Scopes required:** `service_request:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM

    + Attributes (object)
        + `service_request` (object, required)
            + include `Service_Request_PreQualify`
                + `context` (Reference_request, optional)
                    + identifier (Identifier)
                        + type (Codeable_Concept)
                            + coding (array, fixed-type)
                                + (Coding)
                                    + code: `encounter` (string)
        + `programs` (array, required) - Medical programs list for qualify
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: medical_program (string)
                
        
+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + urgent (object, required)
            + `authentication_method_current` (object, required)
                + type: `OTP` (enum, required)
                    - OTP
                    - OFFLINE
                    - NA
                + number: `+38093*****85` (string, optional)
        + meta (Response__Meta)
        +  data (array[`Qualify_Service_Request_Responce`]))

+ Response 422 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 422
        + error
            + type: unverified (string, required)
            + message: `Patient is not active` (string, required)


### Create Service Request [POST]

This method must be used to register new Service Request in the eHealth. 
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Service Request in Media Content Storage if all checks is passed. 

Signed content consists of JSON object with Service Request data.

**Scopes required:** `service_request:write`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Service Request [POST /dummy/patients/{id}/service_requests]

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

    + Attributes (Service_Request_Create)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Get Service Requests list Episode Context [GET /api/patients/{patient_id}/episodes/{episode_id}/service_requests{?status}]

This method returns all service requests related to specified episode of care.

**Scopes required:** `service_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + episode_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, required) - Unique episode identifier
    + status: active (string, optional) - The status of the service request. Default: active
   

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Service_Request_Show`])
        

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Episode or patient not found` (string)
            
            
            

### Get Service Requests by search params [GET /api/patients/{patient_id/service_requests{?status,requester_legal_entity, used_by_legal_entity, episode_id}]

This method returns all service requests related to specified episode of care.

**Scopes required:** `service_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + episode_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, optional) - Unique episode identifier
    + status: active (string, optional) 
    + `requester_legal_entity` : `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, optional) 
    + `used_by_legal_entity`: `8075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    + `code`: `9075e0e2-6b57-47fd-aff7-324806efa7e6` (string, optional) 
    

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Service_Request_Base`])

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Patient not found` (string)

### Get Service Request details with episode [GET /api/patients/{patient_id}/episodes/{episode_id}/service_requests/{service_request_id}]

**Scopes required:** `service_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + episode_id: `ef30f210-5328-4f48-bfe6-c7150d4737a6` (string, required) - Unique episode identifier
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier
  

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Service_Request_Show`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Service request not found` (string)
            

### Get Service Request details w/o episode [GET /api/patients/{patient_id}/service_requests/{service_request_id}]

**Scopes required:** `service_request:read`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier
  

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (Response_OK)
        + data (`Service_Request_Show`)

+ Response 404 (application/json)
    + Attributes (Response_Error)
        + meta (Response__Meta)
            + code: 404 (number)
        + error (Response__Error)
            + type: NOT_FOUND (string)
            + message: `Service request not found` (string)
            

### Cancel Service Request [PATCH /api/patients/{id}/service_requests/{id}/actions/cancel]

This method must be used to cancel existing Service Request. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of service request must be equal to service request stored in DB. See Get Service Request details
2. status_reason and explanatory_letter (optional) must be added to signed content

Please see [Service request (Referral) state model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402276/Referrals+State+Model+-+V1) and Dummy Cancel Service Request for more details


**Scopes required:** `service_request:cancel`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Cancel Service Request [PATCH /api/patients/{id}/service_requests/{id}/actions/cancel/dummy]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (Service_Request_Base)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/service_request_cancel_reasons` (string)
                    + code: `default` (string)
        + `explanatory_letter`: `Направлення було відмінене у зв'язку з помилкою при виборі пацієнта ` (string, optional)
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Recall Service Request [PATCH /api/patients/{id}/service_requests/{id}/actions/recall]

This method must be used to recall existing Service Request. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of service request must be equal to service request stored in DB. See Get Service Request details
2. status_reason and explanatory_letter (optional) must be added to signed content

Please see [Service request (Referral) state model](https://e-health-ua.atlassian.net/wiki/spaces/EH/pages/583402276/Referrals+State+Model+-+V1) and Dummy Recall Service Request for more details

**Scopes required:** `service_request:recall`

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Dummy Recall Service Request [PATCH /api/patients/{id}/service_requests/{id}/actions/recall/dummy]
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (Service_Request_Base)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/service_request_rceall_reasons` (string)
                    + code: `default` (string)
        + `explanatory_letter`: `Направлення було відкликане у зв'язку з помилкою при виборі пацієнта ` (string, optional)
        

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Resend SMS on Service Request [PATCH /api/patients/{patient_id}/service_requests/{service_request_id}/actions/resend]
Method to resend sms on service request
It can be processed in both sync and async methods depends on Server decision
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details

**Scopes required:** `service_request:use`

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique patient identifier
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f

+ Response 200 (application/json)
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

## Manage Service Requests [/api/service_requests]

### Search for a service requests [GET /api/service_requests{?requisition,status,page,page_size}]

This service must be used to discover service requests by requisition number. If nothing found by requisition number - it will return empty list

**Scopes required:** `service_request:read`

+ Parameters
    + requisition: `AX654-654T` (string, required) - A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier
    + status: active (string, optional) - The status of the service request. Default: active
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 200 (application/json)
    + Attributes (Response_Collection)
        + data (array[`Service_Request_List`])

### Qualify Service request by ID [POST /api/service_requests/{service_request_id}/actions/qualify]

**Scopes required:** `service_request:use`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

    + Attributes
        + `programs` (array, required) - Medical programs list for qualify
            + (Reference_response)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: medical_program (string)

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
        +  data (array[`Qualify_Service_Request_Responce`]))

### Use Service Request [PATCH /api/service_requests/{service_request_id}/actions/use]

**Scopes required:** `service_request:use`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

    + Attributes (Use_Service_Request_Request)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Change service request status to In progress [PATCH /api/service_requests/{service_request_id}/actions/process]

**Scopes required:** `service_request:makeinprogress`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Release Service Request [PATCH /api/service_requests/{service_request_id}/actions/release]

**Scopes required:** `service_request:use`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Complete Service Request [PATCH /api/service_requests/{service_request_id}/actions/complete]

**Scopes required:** `service_request:complete`

+ Parameters
    + service_request_id: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - Unique service request identifier

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V

    + Attributes (Complete_Service_Request)
    
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

## Group Approvals
### Create approval [POST /api/patients/{patient_id}/approvals]
Method to create approval: time-limited access to user's resources.
It can be processed in both sync and async methods depends on Server decision.
Depends on processing method Server might answer with:
http code| processing method | Client recommendations
--|--|--
201 | sync | use payload from response
202 | async: **default** method | use [Get job details](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/medical-events/encounter-data-package/get-async-job-processing-details) to get processing result. Response payload will be returned in the job details



+ Parameters
    + `patient_id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - mpi_id

+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f
    + Attributes (object)
        + include `Approval_Request`

+ Response 201 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 201 (number)
        + data(`Approval_Response`)


+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

### Verify approval [PATCH /api/patients/{patiend_id}/approvals/{id}]

+ Parameters
    + `patiend_id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - mpi_id
    + `id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - approval_id
    
+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f

    + Attributes (object)
        + `code`: 3782 (number)

+ Response 200 (application/json)

### Resend SMS on approval [PATCH /api/patients/{patiend_id}/approvals/{id}/actions/resend]

+ Parameters
    + `patiend_id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - mpi_id
    + `id`: `aff00bf6-68bf-4b49-b66d-f031d48922b3` (string, required) - approval_id
    
+ Request (application/json)

    + Headers

            Authorization: Bearer d368a4b0-4a0e-457a-b267-32359fa6288f

+ Response 200 (application/json)
+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


## Group Care plan
### Create Care Plan [POST /api/patients/{patient_id}/care_plans]
This method allows to create Care Plan for a person in eHealth.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Care Plan in Media Content Storage if all checks is passed. 

**Scopes required:** `care_plan:write`

Look at [Dummy Care Plan](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/care-plan/dummy-care-plan/dummy-care-plan) for more details

+ Parameters
    + patient_id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - MPI identifier of the person.

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Care Plan [POST /api/patients/{patient_id}/care_plans]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the person. 

+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    
    + Attributes (Care_Plan_Create)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### Create Care Plan activity [POST /api/patients/{patient_id}/care_plans/{care_plan_id}/activities]
This method adds activity to an existing patient's Care Plan.
Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority).
Service will store signed copy of Care Plan activity in Media Content Storage if all checks is passed.

**Scopes required:** `care_plan:write`

Look at [Dummy Care Plan activity](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/care-plan/create-care-plan-activity/dummy-care-plan-activity) for more details

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the person.
    + `care_plan_id`: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Unique Care Plan identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer F3GF124Df565FDS234SDF34
        api-key: aDGFDFGT46S5gFGD
        
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)

        
### Dummy Care Plan activity [POST /api/patients/{patient_id}/care_plans/{care_plan_id}/activities]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the person.
    + `care_plan_id`: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required) - Unique Care Plan identifier

+ Request (application/json)
    + Headers
        Authorization: Bearer F3GF124Df565FDS234SDF34
        api-key: aDGFDFGT46S5gFGD
        
    + Attributes (`Care_Plan_activity_base`)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### Get Care Plan by ID [GET /api/patients/{patient_id}/care_plans/{id}]
Returns care plan details by it's identifier in patient context

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier. 

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Care_Plan_Show`)


### Get Care Plans by search params [GET /api/patients/{patient_id}/care_plans{?legal_entity_id,period_date,encounter_id,requisition,based_on,part_of,status,page,page_size}]
Returns care plan list filtered by submitted parameters withtin specified patient.

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + legal_entity_id: `7c3da506-804d-4550-8993-bf17f9ee0400` (string, optional) - Legal entity where Care Plan was created. 
    + period_date: `2018-08-02` (date, optional) - date within Care plan's period incleuding start and end dates
    + encounter_id: `7c3da506-804d-4550-8993-bf17f9ee0400` (string, optional) - identifier of the encounter in Care plan
    + based_on: `7c3da506-804d-4550-8993-bf17f9ee0401` (string, optional) - Care Plan identifier on which returned Care plans are based on.
    + part_of: `7c3da506-804d-4550-8993-bf17f9ee0401` (string, optional) - parent Care Plan identifier which includes returned Care plans.
    + status: `active` (string, optional) - Care plan's status
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Care_plan_summary`])


### Get Care Plans by requisition [GET /api/care_plans{?requisition,status,page,page_size}]
This service must be used to discover Care plans by requisition number. If nothing found by requisition number - it will return empty list

**Scopes required:** `care_plan:read`

+ Parameters
    + requisition: `0123-4567-89AB-CEIK` (string, required) - requisition number
    + status: `active` (string, optional) - Care plan's status
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array[`Care_plan_summary`])


### Get Care Plan activity by ID [GET /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}]
Returns care plan's activity details by it's identifier within care plan and patient context

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required) - Care Plan identifier. 
    + id: `75a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (`Care_plan_activity_show`)
            + is_active: true (boolean, required) - Technical attribute. Indicates the availability of the record in the system
            + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
            + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
            + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
            + `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)


### Get Care Plan activities [GET /api/patients/{patient_id}/care_plans/{care_plan_id}/activities{?author,kind,page,page_size}]
Returns all the activities related to the care plan in patient context

**Scopes required:** `care_plan:read`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required) - Care Plan identifier.
    + author: `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, optional) - author of the activity.
    + kind: `service_request` (enum, optional) - kind of the activity.
        - service_request
        - medication_request
    + page: 2 (number, optional) - Page number
    + page_size: 50 (number,optional) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ Request (application/json)

    + Headers

            Authorization: Bearer c2778f3064753ea70de870a53795f5c9
            API-key: uXhEczJ56adsfh3Ri9SUkc4en

+ Response 200 (application/json)
    + Attributes (Response__Process_OK)
        + meta (Response__Meta)
            + code: 200 (number)
        + data (array)
            + (object)
                + include `Care_plan_activity_show`
                + is_active: true (boolean, required) - Technical attribute. Indicates the availability of the record in the system
                + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
                + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
                + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
                + `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)



### Cancel Care Plan [PATCH /api/patients/{patient_id}/care_plans/{id}/actions/cancel]

This method must be used to cancel of existing patient's Care plan. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of care plan must be equal to care plan stored in DB. See *Get Care plan by ID*
2. Activities should not be presented in signed content. 
3. $.status_reason must be added to signed content

Please see [Care plan status model](https://edenlab.atlassian.net/wiki/spaces/EH/pages/1757349003/Care+plan+status+model) and *Dummy Cancel Care plan* for more details


**Scopes required:** `care_plan:write`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Cancel Care Plan [PATCH /api/patients/{patient_id}/care_plans/{id}/actions/cancel]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (`Care_Plan_Show`)
        + `status_reason` (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/care_plan_status_reasons` (string)
                    + code: `some code` (string)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Complete Care Plan [PATCH /api/patients/{patient_id}/care_plans/{id}/actions/complete]

This method must be used to complete of existing patient's Care plan.

Please see [Care plan status model](https://edenlab.atlassian.net/wiki/spaces/EH/pages/1757349003/Care+plan+status+model)


**Scopes required:** `care_plan:write`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/care_plan_status_reasons` (string)
                    + code: `some code` (string)
    

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### Cancel Care Plan activity [PATCH /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}/actions/cancel]

This method must be used to cancel of existing activity from patient's Care plan. Method receives signed message (pkcs7) that consists of signed content, digital signature and signer public key. All signature fields will be validated (including signer certificate authority)

**Important**
1. Signed content of activity must be equal to activity stored in DB. See *Get Care plan activity by ID*
2. $.detail.status_reason must be changed in signed content

Please see [Care plan status model](https://edenlab.atlassian.net/wiki/spaces/EH/pages/1757349003/Care+plan+status+model) and *Dummy Cancel Care plan activity* for more details


**Scopes required:** `care_plan:write`

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - activity identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `signed_data`:`ew0KICAicGVyaW9kIjogew0KIC...` (string, required, fixed-type)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


### Dummy Cancel Care Plan activity [PATCH /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}/actions/cancel]

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - activity identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (`Care_plan_activity_show`)
        + `detail` (Care_Plan_activity_detail_base, fixed-type)
            + status: scheduled (enum, required)
                - `in_progress`
                - scheduled
            + `status_reason` (Codeable_Concept, required, fixed-type)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `some code` (string)
                        + system: `eHealth/some_new_dictionary` (string, required)
        + is_active: true (boolean, required) - Technical attribute. Indicates the availability of the record in the system
        + `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
        + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
        + `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
        + `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)
        

### Complete Care plan activity [PATCH /api/patients/{patient_id}/care_plans/{care_plan_id}/activities/{id}/actions/complete]

This method must be used to complete of existing activity from patient's Care plan.

+ Parameters
    + patient_id: `7c3da506-804d-4550-8993-bf17f9ee0402` (string, required) - MPI identifier of the patient. 
    + care_plan_id: `7c3da506-804d-4550-8993-bf17f9ee0403` (string, required) - Care Plan identifier.
    + id: `7c3da506-804d-4550-8993-bf17f9ee0404` (string, required) - activity identifier.
    
+ Request (application/json)

    + Headers

            Authorization: Bearer mF_9.B5f-4.1JqM
            api-key: aFBLVTZ6Z2dON1V
    
    + Attributes (object)
        + `outcome_codeable_concept` (array, required, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `some code` (string)
                        + system: `eHealth/some_new_dictionary` (string, required)

+ Response 202 (application/json)
    + Attributes (Response_OK)
        + meta (Response__Meta)
            + code: 202 (number)
        + data (`Job`)


# Data Structures

## Responses
### `Response_Collection`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)
+ paging (`Response__Pagination`, fixed-type)

### `Response_Collection_OK`
+ meta (Response__Meta, fixed-type)
+ data (array[], fixed-type)

### `Response_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)

### `Response__Process_OK`
+ meta (Response__Meta, fixed-type)
+ data (object, fixed-type)
    + affordances (array[Affordance], required) - List of available affordances and their URLs

### `Response_verification_by_phone`
+ `phone_number`: `+380508887700` (string, required)

### `Response_Error`
+ meta (Response__Meta, fixed-type)
    + code: 400 (number)
+ error (Response__Error, fixed-type)

### `Response__Meta`
+ code: 200 (number) - HTTP response code.
+ url: http://example.com/resource (string) - URL to requested resource.
+ type (enum) - Type of data that is located in `data` attribute.
    - object (string) - `data` attribute is a JSON object.
    - list (string) - `data` attribute is a list.
+ `request_id`: `req-adasdoijasdojsda` (string) - [Request ID](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/request-id). Send it with `X-Request-ID` header.

### `Response__Error`
+ type: error_type (string) - Atom that represents error type.
+ message: Error description (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_DuplicateEntity`
+ type: `object_already_exists` (string) - Atom that represents error type.
+ message: This API already exists (string) - Human-readable error message. This is for developers, not end-users.

### `Response__Error_ValidationFailed`
+ type: validation_failed (string) - type of an error.
+ message: Validation failed. You can find validators description at our API Manifest: http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors. (string)
+ invalid (array, optional)
    + (object)
        + `entry_type`: `json_data_proprty` (string) - Type of error.
        + `entry`: $.cvv (string) - JSON Path to an invalid property.
        + `rules` (array)
            + (object)
                + `rule`: `required` (string) - String constant that represents validation rule type. List of all types can be found in [API Manifest](http://docs.apimanifest.apiary.io/#introduction/interacting-with-api/errors).
                + `params` (array) - Validation Parameters.
                + `description`: must be present (string, optional)

### `Response__Pagination`
+ page: 2 (number) - Page number.
+ page_size: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50
+ total_entries: 1000 (number) - Total number of objects in collection.
+ total_pages: 20 (number) - Total number of pages.

### `Affordance`
+ action (string, required) - Affordance action.
+ url (string, required)

### `Ext_Reference`
+ reference (Reference_request, optional)
+ text (string, optional)

### `Reference_request`
+ identifier (Identifier)

### `Reference_response`
+ identifier (Identifier)
+ display_value: `null` (string, required) - This field is required in the Reference, so it may be returned empty.


### `Identifier`
+ `type`(Codeable_Concept, required) - Description of identifier
+ `value` : `9183a36b-4d45-4244-9339-63d81cd08d9c` (string, required)- The value that is unique

### `Codeable_Concept`
+ `coding` (array, required, fixed-type)
    + (object)
        + include `Coding`
+ text (string, optional)

### `Coding`
+ system : `eHealth/resources` (string, required)
+ code : `patient` (string, required) - Symbol in syntax defined by the system


### `Period`
+ start : `2018-08-02T10:45:16.000Z`(string, required) - C? Starting time with inclusive boundary
+ end : `2018-08-02T11:00:00.000Z`(string, optional) - C? End time with inclusive boundary, if not ongoing

### `Quantity`
+ value : `13,5` (number, required)
+ comparator : `>` (string, optional)
+ unit : `kg` (string, optional) - for future use
+ system : `eHealth/ucum/units` (string, required)
+ code: `kg` (string, required)

### `Range`
+ low (Quantity, required)
+ high (Quantity, required)

### `Timing`
+ event: `2018-08-02T10:45:16.000Z`
+ repeat (object)
    + include `Repeat`
+ code: `TIMING_ABBREVIATION` (string, optional)

### `Repeat`
+ count: 10 (string, optional) - Number of times to repeat
- One Of
    + `bounds_duration` (Quantity, optional)
    + bounds_range (Range, optional)
    + bounds_period (Period, optional)
+ `count_max`: 20 (string, optional) - Maximum number of times to repeat
+ duration: 15 (string, optional) - How long when it happens
+ `duration_max`: 25 (string, optional) - How long when it happens
+ `duration_unit`: `UNITS_OF_TIME` (string, optional) - unit of time dictionary
+ frequency: 1 (string, optional) - Event occurs frequency times per period
+ `requency_max`: 4 (string, optinal) - Event occurs up to requency max times per period
+ `period`: 1 (string, optinal) - Event occurs frequency times per period
+ `period_max`: 3 (string, optional) - Upper limit of period, 3-4 hours
+ `period_unit`: `UNITS_OF_TIME` (string, optional) - unit of time dictionary
+ `day_of_week`: `DAYS_OF_WEEK` (string, optinal) - DAYS OF WEEK dictionary
+ `time_of_day`: `15:30` (string, optinal) - Time of day for action
+ when: `EVENT_TIMING` (optional) - Code for time period of occurrence
+ offset: 20 (string, optinal) - Minutes from event, before or after

## Episode Of Care

### `Episode_Of_Care_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string) - `dictionary eHealth/episode_types`
+ `status`: `active` (string, required)- `dictionary - eHealth/episode_statuses`
+ name: `Діабет 2018` (string, required)
                    
+ `patient` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    
+ diagnoses_history (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference_request, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
                            
            
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ managing_organization (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
            
+ period (Period, required)
+ care_manager (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)


### `Episode_Of_Care_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string) - `dictionary eHealth/episode_types`
+ `status`: `active`  (string, required) - `dictionary - eHealth/episode_statuses`
+ name: `Діабет 2018` (string, required)
            
+ managing_organization (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
            
+ period (object , required)
    + start: `2018-08-02` (string, required)
+ care_manager (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)


### `Episode_Of_Care_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ type  (Coding, required)
    + system : `eHealth/episode_types` (string)
    + code: `primary_care` (string) - `dictionary eHealth/episode_types`
+ `status`: `active`  (string, required) - `dictionary - eHealth/episode_statuses`
+ name: `Діабет 2018` (string, required)
+  `status_history`  (array, optional, fixed-type)
    +(object)
        + status: `closed` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `current_diagnoses` (array, optional, fixed-type)
    + (Diagnosis)
+ `diagnoses_history` (array, optional, fixed-type)
    + (object)
        + date: `2018-08-02T10:45:16.000Z` (string, required)
        + evidence (Reference_response, required, fixed-type)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
                            
            
        + diagnoses (array, required, fixed-type)
            + (Diagnosis_Referrence_Condition)
            + (Diagnosis_Referrence_Condition_2)
+ `status_history` (array, required, fixed_type)
    + (object)
        + status: `active` (string, required)
        + status reason (Codeable_Concept, required)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/episode_closing_reasons` (string)
                    + code: `cured` (string) \\ wrong_patient, misspelling
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)            
+ managing_organization (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Медікал Солюшнc` (string, required) - This field is filled on creating and never updated after
            
+ period (Period, required)
    - end (string, optional)
    + start: `2018-08-02` (string, required) 
+ care_manager (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
            
+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    


### `Update_Episode`
+ name: `Інсулінонезалежний діабет` (string, optional)

+ care_manager (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)

                    

### `Cancel_Episode`

+ `explanatory_letter`: `Епізод був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    - text (string)

### `Close_Episode`
+ `period` (object, required)
    + `end`: `2018-09-10` (string, required)
+ `closing_summary`: `Носові шляхи вільні, горло рожеве, температура в нормі` (string, optional)    
+ `status_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) \\ wrong_patient, misspelling
    - text (string)

### `Episode_Of_Care_Short`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ name: `Діабет 2018` (string, required)
+ `status`: `active` (string, required)
+ period (Period, required)
    - end (string, optional)
    + start: `2018-08-02` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)

##Visit

### `Visit_Body`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ period (Period, required)
    + end  : `2018-08-02T10:45:16.000Z` (string, required)

### `Submit_Encounter_Package`

+ `visit` (object, optional, fixed-type)
    + include `Visit_Body`
+ `signed_data` : 'ew0KICAicGVyaW9kIjogew0KIC...' (string, required, fixed-type)




## Diagnosis

### `Diagnosis_Request`
+ `condition` (Reference_request, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
            
    
+ rank: `1` (number, optional) - Ranking of the diagnosis. Max value = 10 (for each role type)

### `Diagnosis_Referrence_Condition_2`

+ `condition` (Reference_response, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)

+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/ICPC2/conditions`,
            + `code`: `A20` - `dictionary eHealth/ICPC2/condition_codes or eHealth/ICD10/condition_codes`                    

            
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
           
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

### `Diagnosis_Referrence_Condition`

+ `condition` (Reference_response, required) 
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `condition` (string)
                    
+ `code` (Codeable_Concept, required) 
     + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/ICPC2/conditions`,
            + `code`: `A20` - `dictionary eHealth/ICPC2/condition_codes or eHealth/ICD10/condition_codes`
            
+ `role` (Codeable_Concept, required) - Role that this diagnosis has within the episode of care
    + coding (array, fixed-type)
        + (Coding)
            + `system`: `eHealth/diagnosis_roles`
            + `code`: `CC`
            
+ rank: `1` (number, optional) - Ranking of the diagnosis (for each role type)

## Encouner
### `Encounter_Base` (object)
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`                
+ `date`: `2018-08-02T10:45:16.000Z` (string, required)
+ `incoming_referral`(Reference_response, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ `visit` (Reference_request, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference_request, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`
    
    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string) 
            + code: `11429006` (string)- `dictionary eHealth/encounter_types`
            
+ priority (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_priority` (string) 
            + code: `routine` (string)- `dictionary eHealth/encounter_types`
                    
+ performer (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
                    
+ reasons (array,required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/reasons` (string) 
             + code: `A02` (string) - `dictionary eHealth/ICPC2/reasons`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/reasons` (string)
                + code: `D09` (string)-  `dictionary eHealth/ICPC2/reasons`
                
        
+ diagnoses (array, required, fixed-type)
    + (`Diagnosis_Request`)
        
        
+ actions (array, optional, fixed-type) - actions are required for class PHC and forbidden for other classes
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`
             
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T50` (string)- `dictionary eHealth/ICPC2/actions`
+ `action_references` (array, Reference_request, optional) - action references are forbidden for class PHC
    + (object)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `service` (string)
                    
+ division (Reference_request, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)
+ supporting_info (array,optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `observation` (string)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `diagnostic_report` (string)
+ hospitalization (object,optional)
    + admit_source - From where patient was admitted (physician referral, transfer)
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_admit_source` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_admit_source`
    + re_admission - The type of hospital re-admission that has occurred
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_re_admission` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_re_admission`

    + destination (Reference_request, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: division/legal_entity (string)

    + discharge_disposition - Category or kind of location after discharge
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_disposition` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_disposition`
    + discharge_department - `Department from which patient has been discharged. It is not division`
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_department` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_department`
    + `pre_admission_identifier`: `12345` (string) - Pre-admission identifier

### `Encounter_Request` 
+ encounter (`Encounter_Base`, required, fixed-type)
+ conditions (array, optional, fixed-type)
    + (`Condition_Request`)
    + (`Condition_Request_2`)
+ observations (array, optional, fixed-type)
    + (`Observation_Request_1`)
        + `context` (Reference_request, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
+ `allergy_intolerances` (array[`Allergy_Intolerance_Request`], optional, fixed-type)
+ immunizations (array[`Immunization_Request`], optional, fixed-type)
+ devices (array[`Device_Request`], optional, fixed-type)
+ `risk_assessments`(array[`Risk_Assessment_Request`], optional, fixed-type)
+ `medication_statements` (array[`Medication_Statement_Request`], optional, fixed-type)
+ `medication_administrations` (array[`Medication_Administration_EncounterPCG_Request`], optional, fixed-type)
+ `diagnostic_reports` (array[`Diagnostic_Report_EncounterPCG_Request`], optional, fixed-type)
+ procedures (array[`Procedure_EncounterPCG_Request`], optional, fixed-type)

### `Encounter_Response`
+ id: `465fb6fe-2dea-4b8a-9ef7-58379d1eaab0` (string, required)
+ `origin_episode` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ `status`: `finised`  (string, required) - `dictionary eHealth/encounter_statuses`                   
+ `date`: `2018-08-02` (string, required)
+ `incoming_referral`(Reference_response, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ `visit` (Reference_response, required, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `visit` (string)
                        
+ `episode` (Reference_response, required, fixed-type)   
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)

+ class  (Coding, required)
    + system : `eHealth/encounter_classes` (string)
    + code: `inpatient` (string) - `dictionary eHealth/encounter_classes`

    
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/encounter_types` (string)
            + code: `PC` (string) - `dictionary eHealth/encounter_types`


+ performer (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
    + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after

+ reasons (array,required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/reasons` (string) 
                + code: `T01` (string) - `dictionary eHealth/ICPC2/reasons`

    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/ICPC2/reasons` (string) 
                + code: `T90` (string) - `dictionary eHealth/ICPC2/reasons`

        
+ diagnoses (array, required, fixed-type)
    + (`Diagnosis_Referrence_Condition`)
        
        
+ actions (array, required, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`

    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
             + system: `eHealth/ICPC2/actions` (string)
             + code: `T47` (string)- `dictionary eHealth/ICPC2/actions`

+ `action_references`  (array, Reference_response, optional)
    + (object)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `service` (string)

+ division (Reference_response, optional, fixed-type)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
                    
+ prescriptions: 'Дієта №1, Омепразолу 40 мг 1 раз на добу + амоксициліну 500 мг + метронідазолу 400 мг при необхідності 500 мг або тинідазолу 500 мг 3 рази на добу протягом 1 тижня' (string, optional)
+ supporting_info (array,optional, fixed-type)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `observation` (string)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `diagnostic_report` (string)
+ `cancellation_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/episode_closing_reasons` (string)
            + code: `cured` (string) - wrong_patient, misspelling
            
+ `explanatory_letter`: `Діагноз був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ hospitalization (object,optional)
    + admit_source - From where patient was admitted (physician referral, transfer)
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_admit_source` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_admit_source`
    + re_admission - The type of hospital re-admission that has occurred
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_re_admission` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_re_admission`

    + destination (Reference_response, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: division/legal_entity (string)

    + discharge_disposition - Category or kind of location after discharge
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_disposition` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_disposition`
    + discharge_department - `Department from which patient has been discharged. It is not division`
        + coding (array, fixed-type)
            + (Coding)
                + system: `Health/encounter_discharge_department` (string) 
                + code: `default` (string)- `dictionary eHealth/encounter_discharge_department`
    + `pre_admission_identifier`: `12345` (string) - Pre-admission identifier

### `Cancel_Encounter`
+ encounter (`Encounter_Base` , required, fixed-type)
    + `status`: `entered_in_error` (string) - `dictionary eHealth/encounter_statuses`
    + `explanatory_letter`: `Я, Шевченко Наталія Олександрівна, 20.07.2018 здійснила механічну помилку при внесенні обстеження до системи.` (string, required)    
    + `cancellation_reason` (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/cancellation_reasons` (string)
                + code: `misspelling` (string) - `dictionary eHealth/cancellation_reasons`
                    
+ conditions (array, optional, fixed-type)
    + (`Condition_Request`)
        + `verification_status`: `entered_in_error` (string) - `dictionary eHealth/condition_verification_statuses`  
    + (`Condition_Request_2`)
        + `verification_status`: `entered_in_error` (string)- `dictionary eHealth/condition_verification_statuses`
+ observations (array, optional, fixed-type)
    + (`Observation_Request_1`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/observation_statuses`
        + `context` (Reference_request, required)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `encounter` (string)
+ `allergy_intolerances` (array, optional, fixed-type)
    + (`Allergy_Intolerance_Request`)
        + `verification_status`: `entered_in_error` (string)- `dictionary eHealth/allergy_intolerance_verification_statuses`
+ immunizations (array, optional, fixed-type)
    + (`Immunization_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/immunization_statuses`

+ devices (array, optional, fixed-type)
    + (`Device_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/device_statuses`
+ `risk_assessments` (array, optional, fixed-type)
    + (`Risk_Assessment_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/risk_assessment_statuses`
+ `medication_statements` (array, optional, fixed-type)
    + (`Medication_Statement_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/medication_statement_statuses`
+ `medication_administrations` (array, optional, fixed-type)
    + (`Medication_Administration_EncounterPCG_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/medication_administration_statuses`
        + `status_reason`: `default` (string) - `dictionary eHealth/medication_administration_status_reasons`
+ `diagnostic_reports` (array, optional, fixed-type)
    + (`Diagnostic_Report_EncounterPCG_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/diagnostic_reports_statuses`
+ `procedures` (array, optional, fixed-type)
    + (`Procedure_EncounterPCG_Request`)
        + `status`: `entered_in_error` (string)- `dictionary eHealth/diagnostic_reports_statuses`
        + `explanatory_letter`: `Процедура була відмінена у зв'язку з помилкою при виборі пацієнта ` (string, optional)
      
### `Paper_referral`
+ requisition: `1111-2222-3333-4444` (string, optional) - `Service request number`
+ requester_legal_entity_name: `Some clinic` (string, optional) - Requester legal entity name
+ requester_legal_entity_edrpou: `12345678` (string, required) - Requester legal entity edrpou
+ requester_employee_name: `John` (string, required) - Requester employee name
+ `service_request_date`: `2018-10-08` (string, required) - Service request date
+ note: `Some notes` (string, optional) - Some notes


## Condition
### `Condition_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string) 
                + code: `mother` (string) - `dictionary eHealth/report_origins`
                
        + text: `Галина Олександрівна` (string)
    + asserter(Reference_request, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `patient` (string)
                        
        
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10/condition_codes` (string)
            + code: `A89` (string) - `dictionary - eHealth/ICD10/condition_codes`
            
+ `clinical_status`: `active` (string, required) - `dictionary - eHealth/condition_clinical_statuses`
+ `verification_status`: `provisional` (string, required) - `dictionary - eHealth/condition_verification_statuses`
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/condition_severities` (string)  
            + code: `55604002` (string) -`dictionary - eHealth/condition_severities`
            
    
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/body_sites` (string)
                + code: `181414000` (string) - `dictionary - eHealth/body_sites`
                   
    
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)//Estimated or actual date,  date-time when condition starts
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/condition_stages` (string)
                + code: `14803004` (string) - `dictionary - eHealth/condition_stages`
                
+ evidences (array, optional, fixed-type)
    + (object)
        + code (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/ICPC2/reasons` (string)
                        + code: `169068008` (string) - `dictionary - eHealth/ICPC2/reasons`
                        
        + detail (array, optional, fixed-type)
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)
                                
        


### `Condition_Request_2`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    + asserter(Reference_request, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `patient` (string)
                            

        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string) 
                + code: `mother` (string) - `dictionary eHealth/report_origins`
                
        + text: `Галина Олександрівна` (string)
+ `context` (Reference_request, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10/condition_codes` (string)
            + code: `K87` (string) - `dictionary - eHealth/ICD10/condition_codes`
            
+ `clinical_status`: `active` (string, required) - `dictionary - eHealth/condition_clinical_statuses`
+ `verification_status`: `provisional` (string, required) - `dictionary - eHealth/condition_verification_statuses`
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/condition_severities` (string)  
            + code: `55604002` (string) -`dictionary - eHealth/condition_severities`
            
    
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/body_sites` (string)
                + code: `181414000` (string) - `dictionary - eHealth/body_sites`
                   
    
+ onset_date: `2018-08-02T10:45:16.000Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time

+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/condition_stages` (string)
                + code: `14803004` (string) - `dictionary - eHealth/condition_stages`
                
                
+ evidences (array, optional, fixed-type)
    + (object)
        + code (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/ICPC2/reasons` (string)
                        + code: `169068008` (string) - `dictionary - eHealth/ICPC2/reasons`
                        
                        
        + detail (array, optional, fixed-type)
            + (Reference_request)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)
                                
                            
        


### `Condition_Response`
+ id: `6fe6d880-f100-4e39-a278-1d14eb8472ef` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    
    + `asserter` (Reference_response, optional)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `patient` (string)
                        
        + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string) 
                + code: `mother` (string) - `dictionary eHealth/report_origins`
                
        + text: `Галина Олександрівна` (string)

                    
+ `context` (Reference_response, required)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10/condition_codes` (string)
            + code: `K87` (string) - `dictionary - eHealth/ICD10/condition_codes`
            
+ `clinical_status`: `active` (string, required) - `dictionary - eHealth/condition_clinical_statuses`
+ `verification_status`: `provisional` (string, required) - `dictionary - eHealth/condition_verification_statuses`
+ severity(Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/condition_severities` (string)  
            + code: `55604002` (string) -`dictionary - eHealth/condition_severities`
            
    
+ `body_sites` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/body_sites` (string)
                + code: `181414000` (string) - `dictionary - eHealth/body_sites`
                
    
+ onset_date: `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, requierd)//Date record was believed accurate last time
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ stage (object, optional)
    + summary (Codeable_Concept, required)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/condition_stages` (string)
                + code: `14803004` (string) - `dictionary - eHealth/condition_stages`
                
+ evidences (array, optional, fixed-type)
    + (object)
        + codes (array, optional, fixed-type)
            + (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/ICPC2/reasons` (string)
                        + code: `169068008` (string) - `dictionary - eHealth/ICPC2/reasons`
                        
        + details (array, optional, fixed-type)
            + (Reference_response)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `observation` (string)
                                
        




## Observation

### `Observation_Request_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required) - `dictionary - eHealth/observation_statuses`
+ `diagnostic_report` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string) - `dictionary - eHealth/observation_categories`
                

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)- `dictionary - eHealth/LOINC/observation_codes`
            

- One Of
    + effective_date_time: `2018-08-02T10:45:16.000Z` (string, optional)
    + effective_period (Period, optional, fixed-type)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)

+ primary_source: `true` (boolean, required)
- One Of
    + `performer` (Reference_request, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)


+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string) `dictionary - eHealth/observation_interpretations`
            
    
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `http://hl7.org/fhir/v2/0078` (string) 
            + code: `1341001:272741003=7771000` (string)- `dictionary -  eHealth/body_sites`
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `http://hl7.org/fhir/v2/0078` (string)
            + code: `255459008` (string) - `dictionary - eHealth/observation_methods`
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lower_limit (number, optional)// decimal Lower limit of detection
        + upper_limit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)
+ `reaction_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `immunization` (string)
    
+ components (array, optional, fixed-type)
    + (object)
        + code (Codeable_Concept, required)
        - One Of
            + value_string: `Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.` (string, required)
            + value_quantity (Quantity, required)
            + value_codeable_concept (Codeable_Concept, required)
            + value_sampled_data (object, required)
                + origin (number, optional) //SimpleQuantity Zero value and units
                + period (number, optional) // decimal Number of milliseconds between samples
                + factor (number, optional) // decimal Multiply data by this before adding to origin
                + lowerLimit (number, optional)// decimal Lower limit of detection
                + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
                + dimensions (number, optional) // positiveInt Number of sample points at each time point
                + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
            
            + value_boolean (boolean, required)
            + value_range (object, required, fixed-type)
                + low (Quantity, required)
                + high (Quantity, required)
            + value_ratio (object, required)//Need an example 
                + numerator (Quantity, required)
                + denominator (Quantity, required)
            + value_time (string, required)
            + value_date_time (string, required)
            + value_period (Period, required)
        + interpretation (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/observation_interpretations` (string)
                    + code: `L` (string) `dictionary - eHealth/observation_interpretations`
                    
        + reference_ranges (array, optional, fixed-type)
            + (object)
                + low (Quantity, optional)
                + high (Quantity, optional)
                    + value: `27,5` (number, required)
                    + comparator: `<` (string, required)
                + type (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_types` (string)
                            + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                                
                + `applies_to` (Codeable_Concept, optional)
                    +  coding (array, fixed-type)
                        + (Coding)
                            + system: `eHealth/reference_range_applications` (string)
                            + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                             
                + age (Range, optional)
                    + low (Quantity, optional)
                        + value : `18` (number, required)
                        + comparator : `>` (string, optional)
                        + unit : `years` (string, optinal)
                        - system  (string, optional)
                        - code (string, optional)
                    + high (Quantity, optional)
                        + value : `35` (number, required)
                        + comparator : `<` (string, optional)
                        + unit : `years` (string, optinal)
                        - system (string, optional)
                        - code (string, optional)
                
                + text: `Some text` (string, optional)

### `Observation_Request_1` (`Observation_Request_Base`)
+ `context` (Reference_request, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)

### `Observation_Request_2` (`Observation_Request_Base`)
+ `context` (Reference_request, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)

### `Observation_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `valid` (string, required)
+ diagnostic_report (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string)
+ `context` (Reference_response, optional)
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ categories (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/observation_categories` (string)
                + code: `vital_signs` (string) - `dictionary - eHealth/observation_categories`

+ code (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/LOINC/observation_codes` (string)
            + code: `10569-2` (string)- `dictionary - eHealth/LOINC/observation_codes`
            

- One Of
    + effective_date_time: `2018-10-08T09:46:37.694Z` (string, optional)
    + effective_period (Period, optional)
+ issued: `2018-08-02T10:45:16.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference_response, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
        + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)

+ interpretation (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/observation_interpretations` (string)
            + code: `L` (string) `dictionary - eHealth/observation_interpretations`
            
    
+ comment: `Some comment` (string, optional)
+ `body_site` (Codeable_Concept, optional)
     + coding (array, fixed-type)
        + (Coding)
            + system: `http://hl7.org/fhir/v2/0078` (string) 
            + code: `1341001:272741003=7771000` (string)- `dictionary -  eHealth/body_sites`
            

+ method (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `http://hl7.org/fhir/v2/0078` (string)
            + code: `255459008` (string) - `dictionary - eHealth/observation_methods`
            

- One Of
    + value_quantity (Quantity, required)
    + value_codeable_concept (Codeable_Concept, required)
    + value_sampled_data (object, required)
        + origin (number, optional) //SimpleQuantity Zero value and units
        + period (number, optional) // decimal Number of milliseconds between samples
        + factor (number, optional) // decimal Multiply data by this before adding to origin
        + lowerLimit (number, optional)// decimal Lower limit of detection
        + upperLimit (number, optional) // Σ 0..1 decimal Upper limit of detection
        + dimensions (number, optional) // positiveInt Number of sample points at each time point
        + data (string, required) // Decimal values with spaces, or "E" | "U" | "L"
    + value_string (string, required)
    + value_boolean (boolean, required)
    + value_range (Range, required, fixed-type)
    + value_ratio (object, required)//Need an example 
        + numerator (Quantity, required)
        + denominator (Quantity, required)
    + value_time (string, required)
    + value_date_time (string, required)
    + value_period (Period, required)
+ reference_ranges (array, optional, fixed-type)
    + (object)
        + low (Quantity, optional)
        + high (Quantity, optional)
            + value: `27,5` (number, required)
            + comparator: `<` (string, required)
        + type (Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_types` (string)
                    + code: `normal` (string) - `dictionary - eHealth/reference_range_types`
                        
        + `applies_to`(Codeable_Concept, optional)
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/reference_range_applications` (string)
                    + code: `male` (string) - `dictionary - eHealth/reference_range_applications`
                     
        + age (Range, optional)
            + low (Quantity, optional)
                + value : `18` (number, required)
                + comparator : `>` (string, optional)
                + unit : `years` (string, optinal)
                - system  (string, optional)
                - code (string, optional)
            + high (Quantity, optional)
                + value : `35` (number, required)
                + comparator : `<` (string, optional)
                + unit : `years` (string, optinal)
                - system (string, optional)
                - code (string, optional)
        + text: `Some text` (string, optional)

## `Immunization`

### `Immunization_Request`
 
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccine_codes` (string)
            + code: `HepAHepB` (string) - `dictionary - eHealth/vaccine_codes`
            

+ context : (Reference_request, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date

+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference_request, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ `legal_entity` : (Reference_request, optional), // Where vaccination occurred
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site : ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/immunization_body_sites` (string)
            + code: `oral` (string) - `dictionary - eHealth/immunization_body_sites`
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string)- `dictionary - eHealth/vaccination_routes`
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, optinal)
    + system: `eHealth/immunization_dosage_units` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        + `reasons`: (array, optional, fixed_type)
            + (Codeable_Concept)
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/reason_explanations` (string)
                        + code: `429060002` (string) - `dictionaries- eHealth/reason_explanations`
                         
        + `reasons_not_given` : (array, optional, fixed_type), // Why immunization did not occurr
            + (Codeable_Concept)
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/reason_not_given_explanations` (string)
                        + code: `429060002` (string) - `dictionaries- eHealth/reason_not_given_explanations`

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string) -  `dictionary - eHealth/vaccination_target_diseases` 
                        
    
                    


### `Immunization_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ status : `completed` (string, required), //  completed | entered-in-error
+ not_given : `false` (boolean, required), //   Flag for whether immunization was given
+ `vaccine_code` : (Codeable_Concept, required), //   Vaccine product administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccine_codes` (string)
            + code: `HepAHepB` (string) - `dictionary - eHealth/vaccine_codes`
            

+ context : (Reference_response, required), // Encounter administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ date :  `2018-10-08T09:46:37.694Z` (string, required), // Vaccination administration date
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `false` (boolean, required)
- One Of
    + `performer` (Reference_response, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
        + display_value: `Шевченко Тетяна Вікторівна` (string, required) - This field is filled on creating and never updated after           
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ legal_entity : (Reference_response, optional), // Where vaccination occurred
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
                    
+ manufacturer : `VacinePro Manufacturer` (string, optional), // Vaccine manufacturer
+ lot_number : `AAJN11K` (string, optional), // Vaccine lot number
+ expiration_date : `2018-10-08T09:46:37.694Z` (string, optional), // Vaccine expiration date
+ site  ( Codeable_Concept, optional), // Body site vaccine  was administered
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/immunization_body_sites` (string)
            + code: `oral` (string) - `dictionary - eHealth/immunization_body_sites`
            
+ route : ( Codeable_Concept , optional), // How vaccine entered body
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/vaccination_routes` (string)
            + code: `IM` (string) `dictionary- eHealth/vaccination_routes`
            
+ dose_quantity: ( Quantity, optional), // Amount of vaccine administered
    + value : `18` (number, required)
    - comparator  (string, optional)
    + unit : `mg` (string, optinal)
    + system: `eHealth/immunization_dosage_units` (string, optional)
    - code (string, optional)

+ `explanation`  (object , optional)// Administration/non-administration reasons
    - One Of
        + `reasons`: (array, optional, fixed_type)
            + (Codeable_Concept)
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/reason_explanations` (string)
                        + code: `429060002` (string) - `dictionaries- eHealth/reason_explanations`
                         
        + `reasons_not_given` : (array, optional, fixed_type), // Why immunization did not occurr
            + (Codeable_Concept)
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/reason_not_given_explanations` (string)
                        + code: `429060002` (string) - `dictionaries- eHealth/reason_not_given_explanations`
+ reactions : (array, optional) // Details of a reaction that follows immunization
    + (object)
        + date : `2018-10-08T09:46:37.694Z` (string, optional), // When reaction started
        + detail : (Reference_response, optional) , // Additional information on reaction Observation
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)
                           
        + reported : `true` (boolean, optional) // Indicates self-reported reaction

+ `vaccination_protocols` : (array, optional, fixed_type)// What protocols was followed
    + (object)
        + dose_sequence : 1 (number, optional), // Dose number within series
        + description : Vaccination Protocol Sequence 1 (string, optional), // Details of vaccine protocol
        + `authority`  (Codeable_Concept , optional) // Who is responsible for protocol
            +  coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/vaccination_authorities` (string)
                    + code: `WVO` (string)
                        
        + series : Vaccination Series 1 (string, optional), // Name of vaccine series
        + series_doses : 2 (number, optional), // Recommended number of doses for immunity
        + target_diseases : (array, required)
            + (Codeable_Concept ), //   Disease immunized against
                +  coding (array, fixed-type)
                    + (Coding)
                        + system: `eHealth/vaccination_target_diseases` (string)
                        + code: `1857005` (string) `dictionary - eHealth/vaccination_target_diseases`
                        
                    


## `Allergy_Intolerance`
### `Allergy_Intolerance_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ `clinical_status` : `active` (string, required) - `dictionary - eHealth/allergy_intolerance_clinical_statuses`
+ `verification_status` : `confirmed` (string, required) - `dictionary - eHealth/allergy_intolerance_verification_statuses`
+ type : `allergy` (string, required)- `dictionary - eHealth/allergy_intolerance_types`
+ category : `food`(string, required)- `dictionary - eHealth/allergy_intolerance_categories`
+ criticality : `low`(string, required)- `dictionary - eHealth/allergy_intolerance_criticalities`
+ context (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code  ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/allergy_intolerance_codes` (string)
            + code: `227493005` (string)- `dictionary - eHealth/allergy_intolerance_codes`

+ `onset_date_time` : `2018-10-08T09:46:37.694Z` (string, required)
+ asserted_date: `2018-10-08T09:46:37.694Z` (string, required)

+ primary_source: `true` (boolean, required)
- One Of
    + asserter (Reference_request, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ last_occurrence : `2017-10-08T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction


### `Allergy_Intolerance_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ `clinical_status` : `active` (string, required) - `dictionary - eHealth/allergy_intolerance_clinical_statuses`
+ `verification_status` : `confirmed` (string, required) - `dictionary - eHealth/allergy_intolerance_verification_statuses`
+ type : `allergy` (string, required)- `dictionary - eHealth/allergy_intolerance_types`
+ category : `food`(string, required)- `dictionary - eHealth/allergy_intolerance_categories`
+ criticality : `low`(string, required)- `dictionary - eHealth/allergy_intolerance_criticalities`
+ context: (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
                    
+ code ( Codeable_Concept, required ), // Code that identifies the allergy or intolerance
    +  coding (array, fixed-type)
        + (Coding)
            2+ system: `eHealth/allergy_intolerance_codes` (string)
            + code: `227493005` (string)- `dictionary - eHealth/allergy_intolerance_codes`
                

+ onset_date_time : `2016-01-01T00:00:00.000Z` (string, required)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ inserted_at: `2018-08-02T10:45:16.000Z` (string, required)
+ updated_at: `2018-08-02T10:45:16.000Z` (string, required)
+ primary_source: `true` (boolean, required)
- One Of
    + asserter (Reference_response, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
        + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
            
        + text: `Галина Олександрівна` (string)
+ last_occurrence : `2018-07-02T00:00:00.000Z` (string, optional) , // Date(/time) of last known occurrence of a reaction


## `Risk_Assesment`
### `Risk_Assessment_Request`
+ id: `70a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) 
+ status: `preliminary` (string, required)
+ method (Codeable_Concept, optional) 
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/risk_assesment_methods` (string)
            + code: `deafult_code` (string)- `dictionary - eHealth/risk_assesment_methods`
+ code ( Codeable_Concept, required)
    +  coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/risk_assesment_codes` (string)
            + code: `R80` (string)- `dictionary - eHealth/risk_assesment_codes`
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)

+ primary_source: `true` (boolean, required)
- One Of
    + performer (Reference_request, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
- One Of
    + reason_codes (array, fixed-type)
        + object (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/risk_assessment_reasons` (string)
                    + code: `default_reason` (string)
    + reason_references (array, fixed-type)
        + object (Codeable_Concept, optional)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `condition` (string)
+ basis (Ext_Reference, optional)
    + references (array, fixed-type)
        + (object)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `observation` (string)
+ predictions (array, optional, fixed-type)
    + (object)
        + outcome (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/risk_assessment_outcomes` (string)
                    + code: `default_outcome` (string)
        - One Of
            + probability_range (Range, optional)
            + probability_decimal (number, optional)

        + `qualitative_risk` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/risk_assessment_qualitative_risks` (string)
                    + code: `default_qualitative_risk` (string)
        + relative_risk(number, optional)
        - One Of
            + when_range (Range, optional)
            + when_period (Period, optional)
            
        + rationale: `some text` (string, optional)
            
+ mitigation: `some text` (string, optional)
+ comment: `some text` (string, optional)


### `Risk_Assessment_Response`
+ include `Risk_Assessment_Request`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

## `Device`
### `Device_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status:  `inactive` (string, required) - `dictionary - eHealth/device_statuses`
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ usage_period (Period, required)
    + start : `2000-01-01T00:00:00.000Z`(string, required) 
    + end : `2018-08-02T11:00:00.000Z`(string, optional)

+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ primary_source: `true` (boolean, required)
- One Of
    + asserter (Reference_request, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
+ type (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/device_types` (string) 
            + code: `Spine_board` (string)- `dictionary -  eHealth/device_types`
+ lot_number: `RZ12345678` (string, optional)
+ manufacturer: `GlobalMed, Inc` (string, optional)
+ manufacture_date: `1999-01-01T00:00:00.000Z` (string, optional)
+ expiration_date: `2020-01-01T00:00:00.000Z` (string, optional)
+ model: `NSPX30` (string, optional)
+ version: `v1.0.1` (string, optional)
+ note: `Імплант був вилучений по причині заміни на новий` (string, optional)

## `Medication Statement`
### `Medication_Statement_Request`
+ id: `80a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ asserted_date: `2018-08-02T10:45:00.000Z` (string, required)
+ status:  `active` (string, required) - `dictionary - eHealth/medication_satement_statuses`
+ context: (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ primary_source: `true` (boolean, required)
- One Of
    + asserter (Reference_request, required)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
                        
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
+ effective_period: `Вживає з 2017-го року регулярно` (string, optional) 

+ `medication_code` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/medical_statement_medications` (string) 
            + code: `Spine_board` (string)- `dictionary -  eHealth/medication_statement_medications`
+ note: `Some text` (string, optional)
+ dosage: `5 ml/day` (string, optional)

## `Diagnostic Report`
### `Diagnostic_Report_Base_request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ status: `final` (string, required)
+ code (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ category (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
             + (Coding)
                + system: `eHealth/diagnostic_report_categories` (string)
                + code: `diagnostic_procedure` (string)
+ effective_period(Period, optional)
+ issued: `2018-10-08T09:46:37.694Z` (string, required)
+ conclusion: `At risk of osteoporotic fracture` (string, optional)
+ `conclusion_code` (Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10_AM/condition_codes` (string)
            + code: `H04.2` (string)
+ `recorded_by` (Reference_request, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)

### `Diagnostic_Report_Base_response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ based_on (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ status: `final` (string, required)
+ code (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ category (array, required)
    + (Codeable_Concept)
        + coding (array, fixed-type)
             + (Coding)
                + system: `eHealth/diagnostic_report_categories` (string)
                + code: `diagnostic_procedure` (string)
+ effective_period(Period, optional)
+ issued: `2018-10-08T09:46:37.694Z` (string, required)
+ conclusion: `At risk of osteoporotic fracture` (string, optional)
+ `conclusion_code` (Codeable_Concept)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/ICD10_AM/condition_codes` (string)
            + code: `H04.2` (string)
+ recorded_by (Reference_response, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after


### `Diagnostic_Report_EncounterPCG_Request`
+ include `Diagnostic_Report_Base_request`
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ primary_source: `true` (boolean, required) - could be false
+ `managing_organization` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
- One Of
    + performer (optional)
        -One Of
            + reference (Reference_request, optional)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `employee` (string)
            + text: `Опанасенко Олексій Володимирович` (object, optional)
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
+ results_interpreter (optional)
    - One Of
        + reference (Reference_request,optional)
            + identifier (Identifier, required)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `employee` (string)
        + text: `Опанасенко Олексій Володимирович` (object, optional) 

### `Diagnostic_Report_Package_Request`
+ include `Diagnostic_Report_Base_request`
+ primary_source: `true` (boolean, required) - could NOT be false
+ performer (required)
    -One Of
        + reference (Reference_request, optional)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `employee` (string)
        + text: `Опанасенко Олексій Володимирович` (object, optional)          
                    
+ `managing_organization` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ results_interpreter (optional)
    - One Of
        + `reference` (Reference_request,optional)
            + identifier (Identifier, required)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `employee` (string)
        + text: `Опсенко Олексій Володимирович` (object, optional) 

### `Diagnostic_Report_Package_Request_Cancel`
+ include `Diagnostic_Report_Base_request`
+ primary_source: `true` (boolean, required) - could NOT be false
+ performer (required)
    -One Of
        + reference (Reference_request, optional)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `employee` (string)
        + text: `Опанасенко Олексій Володимирович` (object, optional)          
                    
+ `managing_organization` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_enity` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ results_interpreter (optional)
    - One Of
        + `reference` (Reference_request,optional)
            + identifier (Identifier, required)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `employee` (string)
        + text: `Опсенко Олексій Володимирович` (object, optional)
+ `explanatory_letter`: `Звіт був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `cancellation_reason` (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    - text (string)


### `Diagnostic_Report_Response`
+ include `Diagnostic_Report_Base_response`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ encounter (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ origin_episode (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ `division` (Reference_response, optional) - Division of legal_entity where DR have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
    + display_value: `Перше відділення обласної лікарня №1` (string, optional) - This field is filled on creating and never updated after
+ managing_organization (Reference_response, optional)
    + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `legal_enity` (string)
    + display_value: `Київська обласна лікарня №1` (string, required) - This field is filled on creating and never updated after          
    
+ results_interpreter (optional)
    - One Of
        + reference (Reference_response,optional)
            + identifier (Identifier, required)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `employee` (string)
            + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after            
        + text: `Опанасенко Олексій Володимирович` (object, optional) 
+ primary_source: `true` (boolean, required)
- One Of
    + performer (optional)
        -One Of
            + reference (Reference_response, optional)
                + identifier (Identifier)
                    + type (Codeable_Concept)
                        + coding (array, fixed-type)
                            + (Coding)
                                + code: `employee` (string)
                + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after   
            + text: `Опанасенко Олексій Володимирович` (object, optional)
    + `report_origin` (Codeable_Concept, optional)
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
+ recorded_by (Reference_response, required)
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after                

+ `explanatory_letter`: `Звіт був відмінений у зв'язку з помилкою при виборі пацієнта ` (string, optional)    
+ `cancellation_reason` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/cancellation_reasons` (string)
            + code: `misspelling` (string) \\ wrong_patient, misspelling
    - text (string)


## `Diagnostic Report Package`
### `Submit_DR_Package`
+ `diagnostic_report` (Diagnostic_Report_Package_Request, required)
+ `observations` (array, optional, fixed-type)
    + (Observation_Request_Base)
        + `diagnostic_report` (Reference_request, required)
            + identifier (Identifier, optional, fixed-type)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `diagnostic_report` (string)

### `Submit_DR_Package_Cancel`
+ `diagnostic_report` (Diagnostic_Report_Package_Request_Cancel, required)
+ `observations` (array, optional, fixed-type)
    + (Observation_Request_Base)
        + `diagnostic_report` (Reference_request, required)
            + identifier (Identifier, optional, fixed-type)
                + type (Codeable_Concept, required)
                    + coding (array, required,fixed-type)
                        + (Coding)
                            + code: `diagnostic_report` (string)


### `Medication_Statement_Response`
+ include `Medication_Statement_Request`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

### `Device_Response`
+ include `Device_Request`
+ inserted_at: `2018-08-02T10:55:00.000Z` (string, optional)
+ updated_at: `2018-08-02T10:55:00.000Z` (string, optional)

### Job
+ status: `pending` (string, required) - status of request processing.
+ eta: `2018-08-02T10:45:16.000Z` (string, optional) - estimated time of arrivals
- one of
    - links (array[Link], optional) - links to resources that has been impactedas a job processing result
    - response_data (object, optional) - response data payload of the request that has initiated this job. It's Structure depends on the request.

### Job_Error
+ status: `failed` (string, required) - status of request processing
+ status_code: `422` (string, required) - processing result
+ error (`Response__Error_ValidationFailed`, required)
+ eta: `2019-04-26T09:16:15.936` (string, required) 
        

### Error
+ type: type_atom (string, required) - Atom that represents error type.
+ message: Error description (string, required) - Human-readable error message. This is for developers, not end-users.


### Link
+ entity: `job` (string, required) - name of the entity that link follows to
+ href: `/Jobs/NBXk9EyErUZv1RhXgyvgg` (string, required) - link to entity

### Search_params
+ `page`: 2 (number) - Page number.    
+ `page_size`: 50 (number) - A limit on the number of objects to be returned, between 1 and 100. Default: 50

+ `encounter_id`: 09dc3ed7-2169-45d8-8fa3-d918c6839bf9
+ `episode_id`: f48d1b6c-a021-4d6a-a5a4-aee93e152ecc
+ `inserted_at_from`:`1990-01-01`
+ `inserted_at_to`: `2000-01-01`

## Procedures
### Procedure_Request
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique procedure identifier 
+ `based_on` (Reference_request, optional) - reference to [Service Request](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/service-requests)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ `status` : `COMPLETED` (enum, required) - Status for provided procedure
    - `COMPLETED`
    - `ENTERED_EN_ERROR`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ code (Reference_request, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ `recorded_by` (Reference_request, required) - employee who submit procedure to e-Health
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
- One Of
    + `performer` (Reference_request, required) - is filled in in case primary_source is true
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
    + `report_origin` (Codeable_Concept, optional) - is filled in in case primary_source is false
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where procedure have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `managing_organization` (Reference_request, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)

+ `reason_references` (array, optional) - The justification of why the procedure was performed.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
                        
+ `outcome` (Codeable_Concept, optional) - The outcome of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_outcomes` (string)
            + code: `default_outcome` (string)
            
+ note: `Додаткова інформація по процедурі` (string, optional) - Any other notes and comments about the procedure.
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)

### Procedure_Response
+ id: `7075e0e2-6b57-47fd-aff7-324806efa7e5` (string, required) - Unique procedure identifier 
+ `based_on` (Reference_response, optional) - reference to [Service Request](https://ehealthmedicaleventsapi.docs.apiary.io/#reference/service-requests)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)
+ `status` : `COMPLETED` (enum, required) - Status for provided procedure
    - `COMPLETED`
    - `ENTERED_EN_ERROR`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ code (Reference_response, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ `recorded_by` (Reference_response, required) - employee who submit procedure to e-Health
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
    + display_value: `Шевченко Олесь Вікторович` (string, required) - This field is filled on creating and never updated after
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
- One Of
    + `performer` (Reference_response, required) - is filled in in case primary_source is true
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
    + `report_origin` (Codeable_Concept, optional) - is filled in in case primary_source is false
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ `division` (Reference_response, optional, fixed-type) - Division of legal_entity where procedure have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `managing_organization` (Reference_response, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Перше відділення обласної лікарня №1` (string, optional) - This field is filled on creating and never updated after

+ `reason_references` (array, optional) - The justification of why the procedure was performed.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
                        
+ `outcome` (Codeable_Concept, optional) - The outcome of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_outcomes` (string)
            + code: `default_outcome` (string)
            
+ note: `Додаткова інформація по процедурі` (string, optional) - Any other notes and comments about the procedure.
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)
+ encounter (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `explanatory_letter`: `Процедура була відмінена у зв'язку з помилкою при виборі пацієнта ` (string, optional)
+ origin_episode (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `episode` (string)
+ complication_details (array, reference, optional) - Any complications that occurred during the procedure, or in the immediate post-performance period. Could be filled only for procedure in encounter package and only with reference to condition from same encounter
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)

### Procedure_EncounterPCG_Request
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique procedure identifier 
+ `status` : `completed` (enum, required) - Status for provided procedure
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional) - Reason why current status was set to procedure. Is mandatory for `entered_in_error`
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_status_reasons` (string)
            + code: `default` (string)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service_request` (string)            
+ code (Reference_request, required) - code of procedure
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ `recorded_by` (Reference_request, required) - employee who submit procedure to e-Health
    + identifier (Identifier, optional, fixed-type)
        + type (Codeable_Concept, required)
            + coding (array, required,fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ primary_source: `true` (boolean, required) - source of procedure information. True - the procedure is done by current doctor, false - according to someone description.
- One Of
    + `performer` (Reference_request, required) - is filled in in case primary_source is true
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
    + `report_origin` (Codeable_Concept, optional) - is filled in in case primary_source is false
        + coding (array, fixed-type)
            + (Coding)
                + system: `eHealth/report_origins` (string)
                + code: `mother` (string)
                
        + text: `Галина Олександрівна` (string)
+ `division` (Reference_request, optional, fixed-type) - Division of legal_entity where procedure have been performed.
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ `managing_organization` (Reference_request, required) - Organization where procedure have been performed. Reference to legal_entity
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ `reason_references` (array, optional) - The justification of why the procedure was performed.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)

+ `outcome` (Codeable_Concept, optional) - The outcome of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_outcomes` (string)
            + code: `default_outcome` (string)

+ complication_details (array, reference, optional) - Any complications that occurred during the procedure, or in the immediate post-performance period. Could be filled only for procedure in encounter package and only with reference to condition from same encounter
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ note: `Додаткова інформація по процедурі` (string, optional) - Any other notes and comments about the procedure.
+ `category` (Codeable_Concept, required) - Classification of the procedure
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/procedure_categories` (string)
            + code: `default` (string)
+ `paper_referral` (`Paper_referral`, optional, fixed-type)

### `Medication_Administration_EncounterPCG_Request`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique medication admnistration identifier
+ `part_of` (array, optional) - A larger event of which this particular event is a component or step.
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `Procedure|Medication administration` (string)
+ status : `completed` (enum, required) - Status for provided medication administration
    - `completed`
    - `entered_in_error`
+ category (Codeable_Concept, required) - Type of medication usage
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/medication_administration_categories` (string)
            + code: `409063005` (string)
+ medication (Reference_request, required) - What was administered, medication with type BRAND
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication` (string)
+ `context` (Reference_request, required) - Encounter or Episode of Care administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ performer (Reference_request, required) - Who performed the medication administration
     + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
+ `reason_references` (array, optional) - Condition or observation that supports why the medication was administered
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition|Observation|Diagnostic_report` (string)
+ request (Reference_request, optional) - Request administration performed against
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ note: `Some notes` (string, optional)
+ dosage (array, required, fixed-type) - Details of how medication was taken. SHALL have at least one of dosage.dose or dosage.rate
    + (Dosage)

### `Dosage`
+ text: `Rapid daily-dose escalation, until tolerated, from 3 mg/d, and then 10 mg/d, to the recommended maintenance dose of 30 mg IV over 120 min, 3 times per wk on alternate days for up to 12 wk` (string, optional) - Free text dosage instructions e.g. SIG
+ site (Codeable_Concept) - Body site administered to
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/anatomical_structure_administration_site_codes` (string)
            + code: `344001` (string)
+ route (Codeable_Concept) - How drug should enter body
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/route_codes` (string)
            + code: `46713006` (string)
+ method (Codeable_Concept) - Technique for administering medication
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/administration_methods` (string)
            + code: `419747000` (string)
+ dose (Simple_Quantity) - Amount of medication per dose
- One Of
    + rate_ratio (Ratio)
    + `rate_quantity` (Simple_Quantity)

### `Simple_Quantity`
+ value: `13,5` (number, required)
+ unit: `mg` (string, optional)
+ system: `eHealth/ucum/units` (string, optional)
+ code: `mg` (string, optional)

### `Ratio`
+ numerator (Simple_Quantity, required)
+ denominator (Simple_Quantity, required)

### `Medication_Administration_Response`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required) - Unique medication admnistration identifier
+ `part_of` (array, optional) - A larger event of which this particular event is a component or step.
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `Procedure|Medication administration` (string)
+ status : `completed` (enum, required) - Status for provided medication administration
    - `completed`
    - `entered_in_error`
+ `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/procedure_cancel_reasons` (string)
                    + code: `default` (string)
+ category (Codeable_Concept, required) - Type of medication usage
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/medication_administration_categories` (string)
            + code: `409063005` (string)
+ medication (Reference_response, required) - What was administered, medication with type BRAND
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication` (string)
+ `context` (Reference_response, required) - Encounter or Episode of Care administered as part of
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ `performed_date_time`: `2018-08-02T10:55:00.000Z` (string, required) - date and time when the procedure have been performed
+ performer (Reference_response, required) - Who performed the medication administration
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: employee (string)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after   
    
+ `managing_organization` (Reference_response, required) - legal entity where medication administration was provided
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
    + display_value: `Київська обласна лікарня №1` (string, required) - This field is filled on creating and never updated after

+ `reason_references` (array, optional) - Condition or observation that supports why the medication was administered
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition|Observation|Diagnostic_report` (string)
+ request (Reference_response, optional) - Request administration performed against
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medication_request` (string)
+ note: `Some notes` (string, optional)
+ dosage (array, required, fixed-type) - Details of how medication was taken. SHALL have at least one of dosage.dose or dosage.rate
    + (Dosage)


## Service Request

### `Service_Request_Base`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ requisition: `AX654654T` (string, required)
+ `status`: `active` (string, required)
+ `program` (Reference_response, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
+ `program_processing_status`: new (string, optional)
+ `status_history`  (array, required, fixed-type)
    + (object)
        + status: `closed` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/service_request_status_reasons` (string)
                    + code: `cured` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        
+ `program_processing_status_history`  (array, optional, fixed-type)
    + (object)
        + program_processing_status: `new` (string, required)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        + `inserted_by`: `f7bdce4c-9d6e-4b08-913c-97c4b972f9be` (string, required)
        
+ `program_service` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `program_service` (string) 
+ intent: `order` (string, required)
+ priority: `routine` (string, optional)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/service_request_categories` (string)
            + code: `409063005` (string)
+ code (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `subject` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
+ `context` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One Of
    - `occurrence_date_time`: `2018-08-02T10:45:16.000Z` (string, optional)
    - `occurrence_period` (`Period`, optional)
+ `requester_employee` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `requester_legal_entity` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `75a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `reason_references` (array, required)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ note: `Some notes` (string, required)
+ patient_instruction: `Some patient instructions` (string, required)
+ expiration_date: `2018-08-02T10:45:16.000Z` (string, required)
+ `permitted_resources` (array, optional)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ `used_by_employee` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, optional)
+ `completed_with` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string) - or encounter
+ `used_by_legal_entity` (Reference_response, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
    + display_value: `Опанасенко Олексій Володимирович` (string, required) - This field is filled on creating and never updated after
+ `location_reference` (Reference_response, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer_type` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string)
            + code: `DIETETICS` (string)

### `Service_Request_Show`
+ include `Service_Request_Base`

### `Service_Request_List`
+ include `Service_Request_Base`
+ identity (`Person_service_request`, required)

### `Qualify_Service_Request_Responce`
+ `program_id`: `59781de0-2e64-4359-b716-bcc05a32c10f` (string, required) - `Medical program Identifier`
+ `program_name` : `Fee-For-Service`(string, required)
+ `status` : `INVALID` (enum, required) - Status for ability use program for this Service Request
    - VALID
    - INVALID
+ `rejection_reason` : `Service is not included in the program` (string) - Reason to fetch invalid status

### `Service_Request_PreQualify`

+ status: `active` (string, required)
+ intent: `order` (string, required)
+ priority: `routine` (string, required)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/service_request_categories` (string)
            + code: `409063005` (string)
+ code (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One Of
    - `occurrence_date_time`: `2018-08-02T10:45:16.000Z` (string, optional)
    - `occurrence_period` (`Period`, optional)
+ `requester_employee` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `requester_legal_entity` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `75a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `reason_references` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ note: `Some notes` (string, optional)
+ patient_instruction: `Some patient instructions` (string, optional)
+ `permitted_resources` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ `performer` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `location_reference` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer_type` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string)
            + code: `DIETETICS` (string)

### `Service_Request_Create`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ status: `active` (string, required)
+ intent: `order` (string, required)
+ priority: `routine` (string, required)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/service_request_categories` (string)
            + code: `409063005` (string)
+ code (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `service` (string)
+ `program` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
+ `context` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
- One Of
    - `occurrence_date_time`: `2018-08-02T10:45:16.000Z` (string, optional)
    - `occurrence_period` (`Period`, optional)
+ `requester_employee` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `requester_legal_entity` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `75a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `reason_references` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ note: `Some notes` (string, optional)
+ patient_instruction: `Some patient instructions` (string, optional)
+ `permitted_resources` (array, optional)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
+ `performer` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `location_reference` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `performer_type` (Codeable_Concept, optional)
    + coding (array, fixed-type)
        + (Coding)
            + system: `SPECIALITY_TYPE` (string)
            + code: `DIETETICS` (string)

### `Use_Service_Request_Request`
+ `used_by_employee` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
        + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `used_by_legal_entity` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `legal_entity` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `used_by_division` (Reference_request, optional)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
        + value: `c5a6d991-0bf7-476f-b3cf-bec83f044b2a` (string, required)
+ `program` (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)

        

### `Complete_Service_Request`
+ `completed_with` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `diagnostic_report` (string) 
                    
+ `program_service` (Reference_request, required)
    + identifier (Identifier, required)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `program_service` (string) 
                


## Approvals

### `Approval_Request`
- One Of
    + `resources` (array, optional) - list of resources that are requested access to be granted
        + (Reference_request)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `episode_of_care` (string)
                + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
    + `service_request` (object, optional)
        + (Reference_request)
            + identifier (Identifier)
                + type (Codeable_Concept)
                    + coding (array, fixed-type)
                        + (Coding)
                            + code: `service_request` (string)
                + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `granted_to` (Reference_request, required) - type and identifier of entity to whom access has been granted (employee or legal_entity)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ access_level: `read` (enum, required) - only `read` is supported
    - read
+ authorize_with: `cc949559-5dfe-420f-ac05-065e443b2cc6` (string, optional)- identifier of patient's auth method

### `Approval_Response_crud`
+ `id`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of approval
+ `patient_id`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - mpi_id hash
+ `granted_resources` (array, required) - list of resources that are allowed by approval
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
            + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `granted_to` (Reference_response, required) - type and identifier of entity to whom access has been granted (employee or legal_entity)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ `granted_by` (Reference_response, required) - type and identifier of entity who has granted access - user_id
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `mpi-hash` (string)
+ reason (Reference_response, optional) - type and identifier of entity based on which approval has been created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `status`: new (enum, required) - status of approval
    - new
    - active
+ access_level: `read` (string, required) - only `read` is supported
+ `authentication_method` (object, required)
    + type: `OTP` (enum, required)
        - OTP
        - OFFLINE
        - NA
    + number: `+38093*****85` (string, optional)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `inserted_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `updated_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record

### `Approval_Response`
+ `id`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of approval
+ `granted_resources` (array, required)
    + (Reference_response)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode_of_care` (string)
            + value: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ `granted_to` (Reference_response, required) - type and identifier of entity to whom access has been granted (employee or legal_entity)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ expires_at: 1498749591 (number, required) - expiration date-time timestamp
+ reason (Reference_response, optional) - type and identifier of entity based on which approval has been created
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `status`: new (enum, required) - status of approval
    - new
    - active
+ access_level: `read` (string, required) - only `read` is supported
+ `authentication_method_current` (object, required)
    + type: `OTP` (enum, required)
        - OTP
        - OFFLINE
        - NA
    + number: `+38093*****85` (string, optional)

    

## `Service_dictionary`
### `Service`
+ id: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ name: `Ультразвукове дослідження черевного відділу стравоходу' (string, required)
+ code: `JF2 01` (string, required)
+ is_active: true (boolean, required)
+ parent_id: null (string, optional)
+ category: `imaging` (string, required)
+ is_composition: false (boolean, required)
+ request_allowed: true (boolean, required)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `inserted_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `updated_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record

### `Service_group`
+ id: `e5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
+ name: `Ультразвукові дослідження' (string, required)
+ code: `FJ` (string, required)
+ is_active: true (boolean, required)
+ request_allowed: false (boolean, required)
+ `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `inserted_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record
+ `updated_at`: `2018-08-02T10:45:16.000Z` (string, required)
+ `updated_by`: `d5a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - id of user who has inserted record

### `Service_in_group`
+ include (Service_group)
+ groups (array, optional, fixed-type)
    + (Service_group)
        + id: `75a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required)
        + name: `Ультразвукові дослідження в гастроентерології' (string, required)
        + code: `2FJ` (string, required)
        + services (array, optional, fixed-type)
             + (`Service`)

## `Person_details`
### `Person_service_request`
+ short_name: Петро І. І. (string, required)
+ age: 35 (number, required) - full years between medication request date and birth date

## Care plan
### `Care_Plan_Create`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ `part_of` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ category (Codeable_Concept, required)
    + coding (array, fixed-type)
        + (Coding)
            + system: `eHealth/SNOMED/care_plan_categories` (string)
            + code: `diabetics` (string)
+ title: `Diabetics health plan` (string, required)
+ description: `Some description of the care plan` (string, optional)
+ period (Period, required)
+ `supporting_info` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `episode` (enum)
                            - episode
                            - procedure
                            - diagnostic report
+ note: `Some notes` (string, optional)
+ intent: `order` (enum, required)
    - order
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ addresses (array, required, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (string)
+ author (Reference_request, required) - `author of the Care plan`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ contributor (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `employee` (string)
+ `terms_of_service` (Codeable_Concept,required)
    + coding (array, fixed-type)
        + (Coding)
            + code: INPATIENT (enum)
                - INPATIENT
                - OUTPATIENT
            + system: `eHealth/PROVIDING_CONDITION` (string)
        

### `Care_Plan_activity_base`
+ id: `75a5d991-0bf7-476f-b3cf-bec73f044b2e` (string, required) - unique within the care plan
+ author (Reference_request, required) - `author of the activity`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `care_plan` (Reference_request, required) - `Care plan to which the activity belongs`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ `detail` (Care_Plan_activity_detail_base, required)


### `Care_Plan_activity_detail_base`
+ kind: `service_request` (enum, required)
    - service_request
    - medication_request
+ `product_reference` (object, required) - `medication if kind is medication request, service if service request`
     + identifier (object, optional)
        + type (object, optional)
            + coding (array, optional, fixed-type)
                + object
                    + system: `eHealth/resources` (string, required)
                    + code: `service` (enum)
                        - service
                        - medication
            + text (string)
        + value: `97d57238-ffbe-4335-92ea-28d4de117ea3` (string, required)
+ `reason_code` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `X85` (string)
                + system: `eHealth/ICD10_AM/condition_codes` (string, required)
+ `reason_references` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `condition` (enum) - `conditions/oservations/diagnostic_reports with diagnoses`
                            - condition
                            - oservation
                            - diagnostic_report
+ goal (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `eHealth/care_plan_goals` (string)
                + system: `diabetes_treatment` (string, required)
+ quantity (object)
    + value: 13.5 (number, required)
- One of
    - `scheduled timing` (object)
        + event (array)
            - `2018-08-02T10:45:16Z` ([string])
        + repeat (object)
            - One Of
                - `bounds_duration` (object, optional)
                    + value: 10 (number, optional)
                    + unit: days (string, optional)
                    + system: `eHealth/ucum/units` (string, optional)
                    + code: `d` (string, optional)
                - bounds_range (object, optional)
                    + low (object, required)
                        + value: `13` (number, optional)
                        + unit: `d` (string, optional) 
                        + system: `eHealth/ucum/units` (string, optional)
                        + code: `d` (string, optional)
                    + high (object, required)
                        + value: `23` (number, optional)
                        + unit: `d` (string, optional) 
                        + system: `eHealth/ucum/units` (string, optional)
                        + code: `d` (string, optional)
                - bounds_period (object, optional)
                    + start: `2018-08-02T10:45:16.000Z`(string, required) - Starting time with inclusive boundary
                    + end: `2018-08-02T11:00:00.000Z`(string, optional) - End time with inclusive boundary, if not ongoing
            + count: 10 (string, optional) - Number of times to repeat
            + `count_max`: 20 (string, optional) - Maximum number of times to repeat
            + duration: 15 (string, optional) - How long when it happens
            + `duration_max`: 25 (string, optional) - How long when it happens
            + `duration_unit`: `d` (string, optional) - unit of time dictionary
            + frequency: 1 (string, optional) - Event occurs frequency times per period
            + `frequency_max`: 4 (string, optinal) - Event occurs up to requency max times per period
            + `period`: 1 (string, optinal) - Event occurs frequency times per period
            + `period_max`: 3 (string, optional) - Upper limit of period, 3-4 hours
            + `period_unit`: `d` (string, optional) - unit of time dictionary
            + `day_of_week` (array, optinal) - DAYS OF WEEK dictionary
                - mon ([string])
            + `time_of_day` (array, optinal) - Time of day for action
                - `16:00:00` ([string])
            + when: (array, optional) - Code for time period of occurrence
                - WAKE ([string])
            + offset: 20 (string, optinal) - Minutes from event, before or after
        + code (object)
            + `coding` (array, required, fixed-type)
                + (object)
                    + system: `TIMING_ABBREVIATION` (string, required)
                    + code: `Q4H` (string, required) - Symbol in syntax defined by the system
            + text (string, optional)
    - `scheduled_period` (object)
        + start: `2018-08-02T10:45:16.000Z`(string, required) -  Starting time with inclusive boundary
        + end: `2018-08-02T11:00:00.000Z`(string, optional) -  End time with inclusive boundary, if not ongoing
    - `scheduled_string`: `2018-08-02T10:45:16.000Z` (string)
+ location (Reference_request)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `division` (string)
+ performer (Reference_request)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ `daily_amount` (object)
    + value: 13,5 (number, required)
+ description: `Some activity description` (string)
+ `do_not_perform`: false (boolean, required)
+ `program` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `medical_program` (string)
                    

### `Care_plan_activity_show`
+ include `Care_Plan_activity_base`
+ `outcome_reference` (array, optional, fixed-type)
    + (Reference_request)
        + identifier (Identifier)
            + type (Codeable_Concept)
                + coding (array, fixed-type)
                    + (Coding)
                        + code: `encounter` (enum)
                            - encounter
                            - procedure
                            - `diagnostic_report`
                            - `medication_dispense`
+ `outcome_codeable_concept` (array, optional, fixed-type)
    + (Codeable_Concept)
        + coding (array, fixed-type)
            + (Coding)
                + code: `some code` (string)
                + system: `eHealth/some_new_dictionary` (string, required)
+ `detail` (Care_Plan_activity_detail_base, required)
    + status: scheduled (enum, required)
        - scheduled
        - `in_progress`
        - completed
        - cancelled
    + `status_reason` (Codeable_Concept, optional, fixed-type)
        + coding (array, fixed-type)
            + (Coding)
                + code: `some code` (string)
                + system: `eHealth/some_new_dictionary` (string, required)
    + `remaining_quantity` (object)
        + value: 13,5 (number, required)


### `Care_Plan_Show`
+ include `Care_Plan_Create`
+ subject (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `patient` (string)
        + value: `7c3da506-804d-4550-8993-bf17f9ee0403` (string)
+ status: active (enum, required)
    - active
    - completed
    - cencelled
+ `status_history` (array, required, fixed-type)
    + (object)
        + status: `active` (string, required)
        + `status_reason` (Codeable_Concept, optional)
            + coding (array, fixed-type)
                + (Coding)
                    + system: `eHealth/care_plan_status_reasons` (string)
                    + code: `some code` (string)
        + `inserted_at`: `2018-08-02T10:45:16.000Z` (string, required)
        + `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ requisition: `0123-4567-89AB-CEIK` (string, required)
+ is_active: true (boolean, required) - Technical attribute. Indicates the availability of the record in the system
+ `inserted_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `inserted_by`: `e1453f4c-1077-4e85-8c98-c13ffca0063e` (string, required)
+ `updated_at`: `2017-04-20T19:14:13Z` (string, required) - ISO 8601 date and time in UTC timezone.
+ `updated_by`: `2922a240-63db-404e-b730-09222bfeb2dd` (string, required)

### `Care_plan_summary`
+ id: `90a9e15b-b71b-4caf-8f2e-ff247e8a5600` (string, required)
+ `based_on` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ requisition: `0123-4567-89AB-CEIK` (string, required)
+ `part_of` (Reference_request, optional)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `care_plan` (string)
+ period (Period, required)
+ intent: `order` (enum, required)
    - order
+ encounter (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `encounter` (string)
+ author (Reference_request, required) - `author of the Care plan`
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `employee` (string)
+ subject (Reference_request, required)
    + identifier (Identifier)
        + type (Codeable_Concept)
            + coding (array, fixed-type)
                + (Coding)
                    + code: `patient` (string)
        + value: `7c3da506-804d-4550-8993-bf17f9ee0403` (string)
+ status: active (enum, required)
    - active
    - completed
    - cencelled
+ `terms_of_service` (Codeable_Concept,required)
    + coding (array, fixed-type)
        + (Coding)
            + code: INPATIENT (enum)
                - INPATIENT
                - OUTPATIENT
            + system: `eHealth/PROVIDING_CONDITION` (string)